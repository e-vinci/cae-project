{"pageProps":{"frontmatter":{"title":"CI","description":"Int√©gration continue","date":"20/01/2025","body":{"raw":"\n<InternalPageMenu>\n  <PathViewer>\n    <PathViewerItem to=\"/\"> CAE </PathViewerItem>\n    <PathViewerItem to=\"/quality\"> Qualit√© </PathViewerItem>\n    <PathViewerItem selected> Int√©gration Continue </PathViewerItem>\n  </PathViewer>\n  <InternalPageMenuItem> Cr√©ation de votre compte sous Gitlab </InternalPageMenuItem>\n  <InternalPageMenuItem> Comment d√©marrer l'int√©gration continue de code au sein de Gitlab ? </InternalPageMenuItem>\n  <InternalPageMenuItem> Comment mettre en place le workflow d'int√©gration continue ? </InternalPageMenuItem>\n  <InternalPageMenuItem> Comment mettre en place un pipeline ? </InternalPageMenuItem>\n  <InternalPageMenuItem> Comment g√©rer des t√¢ches en parall√®le dans un pipeline ? </InternalPageMenuItem>\n  <InternalPageMenuItem> Comment sauvegarder des rapports dans Gitlab ? </InternalPageMenuItem>\n  <InternalPageMenuItem> Est-ce que cette int√©gration continue est vraiment utile ? </InternalPageMenuItem>\n</InternalPageMenu>\n\n# <InternalPageTitle> Cr√©ation de votre compte Gitlab </InternalPageTitle>\n\nPour les √©tudiants Vinci, vous devez cr√©er un compte Gitlab. Ce paragraphe est donc pour vous.\n\n**üëâ CONSIGNE** : \n1. Cr√©ez un compte sur Gitlab en vous rendant sur https://gitlab.com/users/sign_up\n2. Votre `First name` et `Last name` : Vous devez indiquer vos vraies informations, notamment votre nom et pr√©nom, pour que vos enseignants puissent vous identifier.\n3. Votre `Username` doit √™tre : `vinci-prenom-nom` (sans accent, sans espace, sans majuscule, sans caract√®res sp√©ciaux). Si ce nom est d√©j√† pris, vous pouvez ajouter l'ann√©e en cours √† la fin de votre username (`vinci-prenom-nom-2025` par exemple).\n4. Votre `Email address` : vous devez indiquer votre adresse email personnelle **`@student.vinci.be`**!, sinon vous ne pourrez pas obtenir les services gratuits offerts par Gitlab Education.\n5. Votre `Password` : Vous devez choisir un mot de passe s√©curis√©.\n6. Vous devez confirmer votre adresse email en donnant le code de v√©rification que vous avez re√ßu par email.\n7. Vous devez ensuite s√©lectionner un `Role` et indiquer une r√©ponse pour `I'm signing up for Gitlab because:`. Vous pouvez choisir vos r√©ponses.\n- Pour **`What would you like to do?`**, vous devez choisir **`Join a project`**.\n- Pour **`Who will be using GitLab?`**, vous devez choisir **`Just me`**.\n8. Une fois votre compte Gitlab cr√©√©, veuillez compl√©ter ce formulaire : https://forms.office.com/e/NbJ1caZQGB\n\n# <InternalPageTitle> Comment d√©marrer l'int√©gration continue de code au sein de Gitlab ? </InternalPageTitle>\n\nNous allons dans un premier temps d√©finir ce qu'est l'int√©gration continue, puis nous verrons comment la mettre en place au sein de Gitlab.\n\n## D√©finition de l'int√©gration continue\n\nL'int√©gration continue est une pratique de d√©veloppement logiciel qui consiste √† **automatiser l'int√©gration du code produit par les d√©veloppeurs dans un r√©f√©rentiel partag√©**. L'objectif est de d√©tecter et de corriger les probl√®mes d'int√©gration le plus t√¥t possible, afin de garantir une qualit√© de code constante et de faciliter le d√©ploiement continu.\n\n## Mise en place de l'int√©gration continue avec Gitlab\n\nGitlab propose des fonctionnalit√©s int√©gr√©es pour mettre en place l'int√©gration continue de code. Voici les √©tapes √† suivre pour configurer l'int√©gration continue dans Gitlab :\n- Prot√©ger la branche principale : pour √©viter les modifications directes sur la branche principale, il est recommand√© de prot√©ger la branche `main` ou `master` et \nd'exiger des *merge requests* pour int√©grer les modifications.\n- Cr√©er un fichier `.gitlab-ci.yml` : ce fichier contient les instructions pour ex√©cuter les tests, le build et le d√©ploiement du code. Il d√©finit les *jobs* et les *stages* √† ex√©cuter lors de l'int√©gration continue.\n\nLes param√®tres pour configurer la protection de la branche principale, la gestion des MR et des builds sont accessibles dans les param√®tres du projet, ou dans les param√®tres du groupe pour appliquer des r√®gles √† plusieurs projets. Pour les √©tudiants Vinci, ces param√®tres ont √©t√© configur√©s par vos enseignants. \nPour pouvoir configurer ces param√®tres, vous devez avoir un r√¥le de `Maintainer` ou d'`Owner` au niveau du groupe ou projet Gitlab.\n\nLorsque vous cr√©ez un projet Gitlab, nous vous recommandons de configurer Gitlab afin de prot√©ger la branche principale, de configurer les *merge requests* pour qu'elles soient valid√©es par un autre membre de l'√©quipe avant d'√™tre fusionn√©es, et de configurer un pipeline d'int√©gration continue qui ex√©cute les tests unitaires et v√©rifie la qualit√© du code.\n\nPour les √©tudiants Vinci : \n- vos enseignants ont tent√© de param√©trer un maximum de r√®gles au niveau du groupe `2025-cae-projects`, puis d'autres r√®gles plus fines au niveau de votre projet Gitlab `cae-group-xy` se trouvant dans le groupe `2025-cae-projects`.\n- vous devez avoir cr√©√© un compte Gitlab en suivant toutes les consignes donn√©es ci-dessus.\n- vous recevrez un email confirmant que vous avez √©t√© ajout√© au projet ` e-vinci / cae-projects / 2025-cae-projects / cae-group-xy` avec le r√¥le de `Developer`.\n- ce r√¥le de `Developer` vous permettra de cr√©er des *merge requests* et de les fusionner. Vous pouvez √©galement configurer le pipeline d'int√©gration continue pour ex√©cuter les tests et v√©rifier la qualit√© du code. \n- par contre, vous ne pourrez pas configurer les r√®gles de protection de la branche principale, ni les r√®gles de *merge requests* au niveau du groupe. Ces r√®gles ont √©t√© configur√©es par vos enseignants.\n\nLes prochaines sections expliquent, √©tape par √©tape, comment configurer l'int√©gration continue dans Gitlab si vous aviez un r√¥le de `Maintainer` ou d'`Owner` au niveau d'un groupe Gitlab. Ces sections sont √† titre informatif pour les √©tudiants Vinci.\n\n## üç¨ Protection de la branche principale au niveau d'un groupe\n\nPour les √©tudiants Vinci, vous n'avez pas de groupe √† configurer. Ce paragraphe est donc pour compr√©hension uniquement du r√¥le d'un `Maintainer` ou d'un `Owner` au niveau d'un groupe Gitlab.\n\nPour prot√©ger la branche principale au niveau d'un groupe Gitlab, vous pouvez suivre les √©tapes suivantes :\n1. Acc√©dez aux param√®tres du projet dans Gitlab (`Settings`).\n2. Cliquez sur `Repository` dans le menu de gauche.\n3. Cliquez sur `Default branch`.\n4. La branche principale est `main` par d√©faut (il n'y a rien √† changer)\n5. Assurez que l'option `Protected` est activ√©e.\n6. Cochez les options :\n   - Allowed to push : `No one` \n   - Allowed to merge : `Developers + Maintainers`.\n7. Cliquez sur `Save changes`.\n\nAinsi, les d√©veloppeurs ne pourront pas pousser directement sur la branche principale, mais devront passer par des *merge requests*.\n\n\n## üç¨ Meilleure gestion des MR au niveau d'un groupe\n\nPour les √©tudiants Vinci, vous n'avez pas de groupe √† configurer. Ce paragraphe est donc pour compr√©hension uniquement du r√¥le d'un `Maintainer` ou d'un `Owner` au niveau d'un groupe Gitlab.\n\nVous pouvez configurer les *merge requests* au niveau d'un groupe Gitlab pour appliquer des r√®gles √† plusieurs projets. Voici comment configurer les *merge requests* au niveau d'un groupe :\n1. Acc√©dez aux param√®tres du projet dans Gitlab (`Settings`).\n2. Cliquez sur `General` dans le menu de gauche.\n3. Cliquez sur `Merge requests`.\n4. Cochez l'option `Pipelines must succeed\nMerge requests can't be merged if the latest pipeline did not succeed or is still running.`.\n5. Cochez l'option `All threads must be resolved`.\n6. Cliquez sur `Save changes`.\n\nAinsi, les *merge requests* ne pourront pas √™tre fusionn√©es si le pipeline d'int√©gration continue a √©chou√© ou si tous les threads n'ont pas √©t√© r√©solus.\n\n## üç¨ Cr√©ation d'un projet sous Gitlab\n\nPour les √©tudiants Vinci, vous ne devez pas cr√©er de Projet Gitlab. Ce paragraphe est donc pour compr√©hension uniquement du r√¥le d'un `Maintainer` ou d'un `Owner` qui doit cr√©er un projet Gitlab.\n\nVous pouvez cr√©er un nouveau projet `priv√©` sur Gitlab en suivant ces √©tapes :\n\n1. Rendez-vous sur un groupe Gitlab (par exemple, https://gitlab.com/e-vinci/cae-projects/2025-cae-projects).\n2. Cliquez sur `New project` en haut √† droite.\n3. S√©lectionnez `Create blank project`.\n4. Nommez votre projet.\n5. Assurez vous que le projet est `Private`.\n5. Cliquez sur `Create project`.\n\n\n## üç¨ Configuration de votre projet sous Gitlab\n\nPour les √©tudiants Vinci, vous n'avez pas de projet √† configurer. Ce paragraphe est donc pour compr√©hension uniquement du r√¥le d'un `Maintainer` ou d'un `Owner` au niveau d'un projet Gitlab.\n\n### Protection de la branche principale\n\nPour prot√©ger la branche principale, vous ne devez normalement rien changer si vous avez cr√©√© votre projet dans un groupe o√π vous avez d√©j√† prot√©g√© la branche principale. \n\nPour v√©rifier que tout est en ordre, vous pouvez suivre les √©tapes suivantes :\n1. Acc√©dez aux param√®tres du projet dans Gitlab (`Settings`).\n2. Cliquez sur `Repository` dans le menu de gauche.\n3. Cliquez sur `Protected branches`.\n4. La branche principale est `main` par d√©faut (il n'y a rien √† changer)\n5. Assurez que cela est s√©lectionn√© : `Protect this branch`.\n   - `Allowed to merge` : `Developers + Maintainers`.\n   - `Allowed to push and merge` : `No one` \n\nAinsi, les d√©veloppeurs ne pourront pas pousser directement sur la branche principale, mais devront passer par des *merge requests*.\n\n### Meilleure gestion des MR\n\n#### Historique des commits plus propre\n\n1. Acc√©dez aux param√®tres du projet dans Gitlab (`Settings`).\n2. Cliquez sur `Merge requests` dans le menu de gauche.\n3. Cochez l'option `Fast-forward merge`. \n```txt No merge commits are created.\nFast-forward merges only.\nWhen there is a merge conflict, the user is given the option to rebase.\nIf merge trains are enabled, merging is only possible if the branch can be rebased without conflicts.\n```\n4. `Squash commits when merging` : S√©lectionnez `Do not allow`. `Squashing is never performed and the checkbox is hidden.`\n5. Cliquez sur `Save changes`.\n\n#### Approbation des MR\n\n1. Acc√©dez aux param√®tres du projet dans Gitlab (`Settings`).\n2. Cliquez sur `Merge requests` dans le menu de gauche.\n3. Veuillez ajouter au moins un membre de votre √©quipe pour approuver les *merge requests* :\n`Approval required` : `1` (ou plus si vous le souhaitez)\n4. Cliquez sur `Save changes`.\n\n# <InternalPageTitle> Comment mettre en place le workflow d'int√©gration continue ? </InternalPageTitle>\n\n## Introduction \n\nVoici un premier workflow que nous souhaitons appliquer pour l'int√©gration continue de code dans Gitlab :\n\n1. Un d√©veloppeur cr√©e une nouvelle feature branche √† partir de la branche principale.\n2. Le d√©veloppeur travaille sur sa feature et pousse ses modifications sur la branche distante.\n3. Le d√©veloppeur cr√©e une *merge request* pour fusionner sa branche avec la branche principale.\n4. Un autre membre de l'√©quipe approuve la *merge request*.\n\nNous allons commencer par ajouter le boilerplate de votre API Spring √† votre projet Gitlab.\n\n## Ajout du boilerplate de votre API Spring\n\nVeuillez cloner votre projet Gitlab sur votre machine locale.\n\nVous devriez cr√©er une nouvelle branche √† partir de la branche principale pour ajouter le boilerplate de votre API Spring. Nous vous proposons de l'appeler `api-init`.\n\nPour l'ajout du boilerplate de votre API Spring, vous devez avoir fait tous les tutoriels qui sont demand√©s dans la page [Qualit√© de l'API](../quality/api).\nLe boilerplate de votre API Spring doit √™tre ajout√© √† la racine de votre projet Gitlab, dans un dossier nomm√© **`api`**.\nSi vous avez suivi les tutoriels, vous devriez avoir un projet Spring Boot avec les d√©pendances n√©cessaires pour d√©marrer votre API. En cas de souci, vous pouvez utiliser le dossier `api` fourni dans ce repository : [cae-project-boilerplate](https://github.com/e-vinci/cae-project-boilerplate).\n\nPensez √† ajouter un fichier `.gitignore` √† la racine de votre projet (votre repository) pour ignorer les fichiers inutiles.\n\n```txt\n### Mac\n.DS_Store\n### Windows\nThumbs.db\n### Linux\nlost+found\n.env\n*.env\n```\n\nApr√®s avoir fait ces modifications, vous devez pousser votre branche `api-init` sur votre repo distant (qui est votre projet Gitlab).\n\nComment cr√©er une Merge Request ? [Voir la documentation](https://docs.gitlab.com/ee/user/project/merge_requests/creating_merge_requests.html)\n\nSur votre projet Gitlab, vous devriez voir un bouton `Create merge request` pour cr√©er une *merge request*.\n\nTBC : V√©rifier les consignes qui suivent.\nVeuillez compl√©ter le formulaire de *merge request* en indiquant les informations suivantes :\n- **Title** : `Ajout du boilerplate de l'API Spring`\n- **Description** : \n  ```\n  Ajout du boilerplate de l'API Spring.\n  ```\n- **Assign to** : Assign to me\n- **Reviewers** : S√©lectionnez un membre de votre √©quipe pour approuver la *merge request*.\n- **Merge options** : \n  - `Delete source branch when merge request is accepted.` : Cochez cette option pour supprimer la branche `boilerplate-init` apr√®s la fusion. On garde malgr√© tout l'historique complet des commits.\n  - `Squash commits when merge request is accepted.` : On pourrait cocher cette option pour fusionner tous les commits de la branche `boilerplate-init` en un seul commit. N√©anmoins, pour pouvoir suivre tous vos commits, nous vous demandons de ne pas cocher cette option.\n- **Labels** : Ajoutez le label `boilerplate`.\n- Cliquez sur `Create merge request`.\n\n\nTBC : V√©rifier les consignes qui suivent.\nVeuillez demander √† un autre membre de votre √©quipe de revoir et d'approuver votre *merge request*.\n\nComment approuver une Merge Request ? [Voir la documentation](https://docs.gitlab.com/ee/user/project/merge_requests/approvals/)\n\nUne fois la *merge request* approuv√©e, vous ne pouvez toujours pas fusionner la branche `boilerplate-init` avec la branche principale.\n\nVous avez le message suivant : `Merge blocked: 1 check failed. The pipeline for this merge request failed.`\nCela signifie que le pipeline d'int√©gration continue a √©chou√©. \n\nEt c'est normal, car nous n'avons pas encore configur√© le pipeline d'int√©gration continue pour ex√©cuter les tests et v√©rifier la qualit√© du code.\n\n# <InternalPageTitle> Comment mettre en place un pipeline ? </InternalPageTitle>\n\n## C'est quoi un pipeline ?\n\nUn pipeline est un ensemble de **jobs** qui sont ex√©cut√©s dans un ordre sp√©cifique pour automatiser le processus de construction, de test et de d√©ploiement d'une application.\n\nNous allons voir comment configurer un pipeline dans Gitlab pour ex√©cuter les tests unitaires et v√©rifier la qualit√© du code de notre API.\n\n## Configuration du pipeline\n\nPour configurer un pipeline dans Gitlab, vous devez cr√©er un fichier **`.gitlab-ci.yml`** √† la racine de votre projet. Ce fichier contient les instructions pour ex√©cuter les diff√©rents jobs du pipeline.\n\nAu niveau de la Merge requests, il y a un bouton `Try out GitLab Pipelines` qui permet de tester le pipeline avant de la fusionner.\n\nA la racine de votre Projet Gitlab (votre repository), dans la branche `api-init`, cr√©ez un fichier `.gitlab-ci.yml` avec le contenu suivant :\n\n```yaml\napi test:\n  image: maven:3.9.9-amazoncorretto-21\n  script:\n    - cd api\n    - mvn clean test\n```\n\nCe fichier d√©finit un job nomm√© `api test` qui utilise l'image Docker `maven:3.9.9-amazoncorretto-21` pour ex√©cuter les tests unitaires de l'API Spring. Le script ex√©cute les commandes suivantes :\n- `cd api` : se d√©place dans le dossier `api` o√π se trouve le code de l'API Spring.\n- `mvn clean test` : ex√©cute tous les checks que nous avons configur√©s dans l'API Spring. Il s'agit du Checkstyle, du PMD, du CPD et des tests unitaires.\n\nVeuillez pousser votre fichier `.gitlab-ci.yml` sur votre d√©p√¥t distant.\n\nMaintenant que vous avez ajout√© le fichier `.gitlab-ci.yml`, vous devriez voir un pipeline se d√©clencher automatiquement √† chaque *push* sur la branche `api-init`.\n\n## V√©rification du pipeline\n\nPour v√©rifier que le pipeline a √©t√© ex√©cut√©e avec succ√®s, vous pouvez acc√©der √† l'onglet `Build`, `Pipelines` de votre projet Gitlab.\n\nL√†, vous devriez voir un pipeline avec le job `api test` qui a √©t√© ex√©cut√© avec succ√®s ou qui est toujours en cours.\n\nSi vous cliquez sur le num√©ro du pipeline, vous pouvez voir les d√©tails de l'ex√©cution du job `api test`. Puis vous pouvez voir les logs de l'ex√©cution du job. On voit ici que tous les tests ont ex√©cut√©s avec succ√®s et que le build est r√©ussi.\n\nNous savons donc que la qualit√© du commit est bonne et que nous pouvons fusionner la branche `api-init` avec la branche principale.\n\n## Fusion de la branche `api-init` avec la branche principale\n\nMaintenant que le pipeline a √©t√© ex√©cut√©e avec succ√®s, vous pouvez fusionner la branche `api-init` avec la branche principale. Pour cela, vous devez approuver la *merge request*.\n\nUne fois la *merge request* approuv√©e, vous pouvez cliquer sur le bouton `Merge` pour fusionner la branche `api-init` avec la branche principale.\n\nAttention, une fois la MR fusionn√©e, un nouveau pipeline sera d√©clench√© pour la branche principale. Vous devez vous assurer que ce pipeline est ex√©cut√© avec succ√®s avant de continuer.\n\n## Terminer la fusion de la branche `api-init` avec la branche principale\nTout est bien g√©r√© sur le gitlab distant.\nIl reste √† terminer la fusion de la branche `api-init` avec la branche principale sur votre machine locale.\nPour ce faire, vous devez vous placer sur la branche principale et r√©cup√©rer les derni√®res modifications. Par exemple, si vous √™tes sur la branche `api-init`, vous pouvez ex√©cuter les commandes suivantes :\n\n```bash\ngit checkout main\ngit pull\n```\n\n## R√©sum√© du workflow actuel pour l'int√©gration continue\n\n1. Un d√©veloppeur cr√©e une nouvelle feature branche √† partir de la branche principale.\n2. Le d√©veloppeur travaille sur sa feature et pousse ses modifications sur la branche distante.\n3. Le pipeline d'int√©gration continue est d√©clench√© automatiquement. Si le pipeline √©choue, le d√©veloppeur doit corriger les erreurs avant de continuer.\n4. Le d√©veloppeur cr√©e une *merge request* pour fusionner sa branche avec la branche principale.\n5. Un autre membre de l'√©quipe approuve la *merge request*.\n6. La *merge request* est fusionn√©e avec la branche principale.\n\n# <InternalPageTitle> Comment g√©rer des t√¢ches en parall√®le dans un pipeline ? </InternalPageTitle>\n\n## Introduction\n\nComment g√©rer des t√¢ches en parall√®le dans un pipeline ? Par exemple, comment ex√©cuter les tests du frontend et de l'API en parall√®le dans un pipeline ?\n\nEn fait, dans Gitlab, vous pouvez d√©finir plusieurs jobs dans un pipeline et les ex√©cuter en parall√®le.\n\nSi vous avez plusieurs jobs qui ne d√©pendent pas les uns des autres, vous pouvez les ex√©cuter en parall√®le pour gagner du temps.\n\nNous allons donc ajouter notre frontend React dans le pipeline et ex√©cuter les tests du frontend et de l'API en parall√®le.\n\n## Ajout du boilerplate de votre frontend\n\nPour l'ajout du boilerplate de votre frontend, vous devez avoir fait tout ce qui est demand√© dans la page [Qualit√© du Frontend](../quality/frontend).\nA la fin de ces tutoriels (le dernier s'appelle `unit-tests`), vous devriez avoir un projet React avec les d√©pendances n√©cessaires pour d√©marrer un frontend. N√©anmoins, ce frontend n'int√®gre pas la librairie MUI.\n\nPour vous aider, nous avons cr√©√© un boilerplate pour le frontend qui reprend les tutoriels pr√©c√©dents et qui int√®gre la librairie MUI. Vous pouvez le trouver ici : [cae-project-boilerplate](https://github.com/e-vinci/cae-project-boilerplate).\n\nVous devriez cr√©er une nouvelle branche √† partir de la branche principale pour ajouter le boilerplate de votre frontend React dans un dossier nomm√© **`/frontend`**. Nous vous proposons d'appeler votre nouvelle branche `frontend-init`.\n\n## Mise √† jour du pipeline\n\nVeuillez mettre √† jour votre fichier `.gitlab-ci.yml` pour ex√©cuter les tests du frontend et de l'API en parall√®le :\n\n```yaml {7-13}\napi test:\n  image: maven:3.9.9-amazoncorretto-21\n  script:\n    - cd api\n    - mvn clean test\n\nfrontend test:\n  image: node:20\n  script:\n    - cd frontend\n    - npm install\n    - npm run lint\n    - npm run coverage\n```\n\nCe fichier d√©finit deux jobs `api test` et `frontend test` qui ex√©cutent les tests de l'API Spring et du frontend React en parall√®le.\n\nIci, pour le frontend, nous souhaitons d'abord ex√©cuter les tests du linter, puis les tests unitaires pour g√©n√©rer un rapport de couverture de code.\n\nVeuillez pousser tous vos modifications sur votre repo distant.\n\n## V√©rification du pipeline\n\nApr√®s avoir pouss√© vos modifications, vous devriez voir un nouveau pipeline se d√©clencher automatiquement √† chaque *push* sur la branche `frontend-init`.\n\nVous devriez voir deux jobs `api test` et `frontend test` qui sont ex√©cut√©s en\nparall√®le.\n\nUne fois le pipeline ex√©cut√© avec succ√®s, nous pourrions fusionner la branche `frontend-init` avec la branche principale.\n\nMais avant cela, nous souhaitons d√©couvrir un nouveau concept, la notion d'artefacts pour stocker les rapports de tests g√©n√©r√©s par les jobs du pipeline.\n\n# <InternalPageTitle> Comment sauvegarder des rapports dans Gitlab ? </InternalPageTitle>\n\n## Introduction\n\nDans un pipeline, il est souvent n√©cessaire de g√©n√©rer des rapports de tests, de couverture de code, de qualit√© du code, etc. Ces rapports peuvent √™tre stock√©s dans Gitlab en tant qu'artefacts pour les consulter ult√©rieurement.\n\nNous allons voir comment sauvegarder les rapports de tests g√©n√©r√©s par les jobs `api test` et `frontend test` dans Gitlab.\n\n## Sauvegarde des rapports\n\nPour sauvegarder les rapports de tests dans Gitlab, vous devez utiliser l'option `artifacts` dans le fichier `.gitlab-ci.yml`.\n\nVoici comment mettre √† jour votre fichier `.gitlab-ci.yml` pour sauvegarder les rapports de tests :\n\n```yaml {6-10,19-21} showLineNumbers\napi test:\n  image: maven:3.9.9-amazoncorretto-21\n  script:\n    - cd api\n    - mvn clean test\n  artifacts:\n    paths:\n      - api/target/reports/\n      - api/target/site/\n      - api/target/surefire-reports/\n\nfrontend test:\n  image: node:20\n  script:\n    - cd frontend\n    - npm install\n    - npm run lint\n    - npm run coverage\n  artifacts:\n    paths:\n      - frontend/coverage/\n```\n\nCe fichier d√©finit deux jobs `api test` et `frontend test` qui ex√©cutent les tests de l'API Spring et du frontend React en parall√®le. Les rapports de tests g√©n√©r√©s par ces jobs sont sauvegard√©s dans Gitlab en tant qu'artefacts.\n\nPour l'API Spring, nous sauvegardons les rapports dans les dossiers `api/target/reports/`, `api/target/site/` et `api/target/surefire-reports/`. Pour le frontend React, nous sauvegardons les rapports dans le dossier `frontend/coverage/`.\n\nPour retrouver ces documents dans Gitlab, vous pouvez acc√©der √† l'onglet `Build`, `Pipelines` de votre projet Gitlab. Vous devriez voir un pipeline avec les jobs `api test` et `frontend test` qui ont √©t√© ex√©cut√©s avec succ√®s.\n\nSi vous cliquez sur le num√©ro du pipeline, vous pouvez voir les d√©tails de l'ex√©cution du job `api test` ou `frontend test`. \nEn cliquant sur le job, vous pouvez t√©l√©charger ou voir les artefacts g√©n√©r√©s par le job.\n\nPour voir les artefacts g√©n√©r√©s par le job `api test`, vous pouvez cliquer sur le job `api test` dans le pipeline. Cliquez ensuite sur le bouton `Browse` pour voir les artefacts g√©n√©r√©s par le job.\n\nIdem pour le job `frontend test`. Allez dans le pipeline, cliquez sur le job `frontend test` et cliquez sur le bouton `Browse` pour voir les artefacts g√©n√©r√©s par le job.\n\n## Int√©gration des changements dans la branche principale\n\nMaintenant que vous avez ajout√© les artefacts dans votre pipeline, vous pouvez fusionner la branche `frontend-init` avec la branche principale.\n\nPour cela, vous devez cr√©er une *merge request* pour fusionner la branche `frontend-init` avec la branche principale. Une fois la *merge request* approuv√©e, vous pouvez cliquer sur le bouton `Merge` pour fusionner la branche `frontend-init` avec la branche principale.\n\nN'oubliez pas de mettre √† jour votre branche principale sur votre machine locale apr√®s la fusion.\n\n# <InternalPageTitle> Est-ce que cette int√©gration continue est vraiment utile ? </InternalPageTitle>\n\n## Intro\n\nImaginons que quelqu'un vient √† changer le code du frontend ou de l'API. Il est possible que ces changements affectent le bon fonctionnement de l'application.\n\nL'int√©gration continue permet de d√©tecter ces probl√®mes le plus t√¥t possible, en ex√©cutant automatiquement les tests et en v√©rifiant la qualit√© du code √† chaque modification du code.\n\nPour ce tutoriel, veuillez cr√©er un souci au niveau du frontend.\n\n## Cr√©ation d'un souci au niveau du frontend\n\nVous savez qu'il est impossible de faire un `push` directement sur la branche principale. Vous devez passer par une *merge request*.\n\nVeuillez donc cr√©er une nouvelle branche au niveau du frontend que nous allons appeler `update-login-color`.\n\nVeuillez mettre √† jour le fichier `src/components/pages/LoginPage.tsx` pour changer la couleur du formulaire de connexion (de 'secondary.light' vers \"primary.light\").\n\n```tsx {6}\nreturn (\n    <Box\n      sx={{\n        margin: 2,\n        padding: 3,\n        backgroundColor: \"primary.light\",\n        borderRadius: 4,\n        boxShadow: 2,\n      }}\n    >\n```\n\nFaite un `commit` et un `push` sur votre branche `update-login-color`.\n\n## V√©rification du pipeline\n\nApr√®s avoir pouss√© vos modifications, vous devriez voir un nouveau pipeline se d√©clencher automatiquement √† chaque *push* sur la branche `update-login-color`.\n\nVous devriez voir deux jobs `api test` et `frontend test` qui sont ex√©cut√©s en parall√®le.\n\nEt finalement, vous devriez voir que le job `frontend test` a √©chou√©. En cliquant sur le job `frontend test`, vous pouvez voir les d√©tails de l'√©chec.\nVoici le message d'erreur que vous devriez voir :\n\n```txt\neslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0\n/builds/e-vinci/cae-projects/2025-cae-projects/cae-xy/frontend/src/components/pages/LoginPage.tsx\n  40:26  error  Replace `\"primary.light\"` with `'primary.light'`  prettier/prettier\n‚úñ 1 problem (1 error, 0 warnings)\n  1 error and 0 warnings potentially fixable with the `--fix` option.\n```\n\nOn voit ici que le linter ESLint a d√©tect√© une erreur dans le fichier `src/components/pages/LoginPage.tsx`. Nous avons utilis√© des guillemets doubles au lieu de simples pour la couleur du formulaire de connexion !!!\n\n## Correction de l'erreur\n\nPour corriger cette erreur, vous devez mettre √† jour le fichier `src/components/pages/LoginPage.tsx` pour changer la couleur du formulaire de connexion de `\"primary.light\"` vers `'primary.light'`.\n\n```tsx {6}\nreturn (\n    <Box\n      sx={{\n        margin: 2,\n        padding: 3,\n        backgroundColor: 'primary.light',\n        borderRadius: 4,\n        boxShadow: 2,\n      }}\n    >\n```\n\nFaite un `commit` et un `push` sur votre branche `update-login-color`.\n\nCette fois-ci, le job `frontend test` devrait √™tre ex√©cut√© avec succ√®s ! üéâ","code":"var Component=(()=>{var g=Object.create;var t=Object.defineProperty;var v=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var N=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var k=(i,n)=>()=>(n||i((n={exports:{}}).exports,n),n.exports),q=(i,n)=>{for(var a in n)t(i,a,{get:n[a],enumerable:!0})},d=(i,n,a,l)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let r of b(n))!f.call(i,r)&&r!==a&&t(i,r,{get:()=>n[r],enumerable:!(l=v(n,r))||l.enumerable});return i};var z=(i,n,a)=>(a=i!=null?g(N(i)):{},d(n||!i||!i.__esModule?t(a,\"default\",{value:i,enumerable:!0}):a,i)),j=i=>d(t({},\"__esModule\",{value:!0}),i);var p=k((y,u)=>{u.exports=_jsx_runtime});var P={};q(P,{default:()=>m,frontmatter:()=>x});var e=z(p()),x={title:\"CI\",description:\"Int\\xE9gration continue\",date:\"20/01/2025\"};function h(i){let n={a:\"a\",code:\"code\",em:\"em\",h1:\"h1\",h2:\"h2\",h3:\"h3\",h4:\"h4\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",span:\"span\",strong:\"strong\",ul:\"ul\",...i.components},{InternalPageMenu:a,InternalPageMenuItem:l,InternalPageTitle:r,PathViewer:o,PathViewerItem:s}=n;return a||c(\"InternalPageMenu\",!0),l||c(\"InternalPageMenuItem\",!0),r||c(\"InternalPageTitle\",!0),o||c(\"PathViewer\",!0),s||c(\"PathViewerItem\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(a,{children:[(0,e.jsxs)(o,{children:[(0,e.jsx)(s,{to:\"/\",children:\" CAE \"}),(0,e.jsx)(s,{to:\"/quality\",children:\" Qualit\\xE9 \"}),(0,e.jsx)(s,{selected:!0,children:\" Int\\xE9gration Continue \"})]}),(0,e.jsx)(l,{children:\" Cr\\xE9ation de votre compte sous Gitlab \"}),(0,e.jsx)(l,{children:\" Comment d\\xE9marrer l'int\\xE9gration continue de code au sein de Gitlab ? \"}),(0,e.jsx)(l,{children:\" Comment mettre en place le workflow d'int\\xE9gration continue ? \"}),(0,e.jsx)(l,{children:\" Comment mettre en place un pipeline ? \"}),(0,e.jsx)(l,{children:\" Comment g\\xE9rer des t\\xE2ches en parall\\xE8le dans un pipeline ? \"}),(0,e.jsx)(l,{children:\" Comment sauvegarder des rapports dans Gitlab ? \"}),(0,e.jsx)(l,{children:\" Est-ce que cette int\\xE9gration continue est vraiment utile ? \"})]}),`\n`,(0,e.jsx)(n.h1,{children:(0,e.jsx)(r,{children:\" Cr\\xE9ation de votre compte Gitlab \"})}),`\n`,(0,e.jsx)(n.p,{children:\"Pour les \\xE9tudiants Vinci, vous devez cr\\xE9er un compte Gitlab. Ce paragraphe est donc pour vous.\"}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.strong,{children:\"\\u{1F449} CONSIGNE\"}),\" :\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Cr\\xE9ez un compte sur Gitlab en vous rendant sur \",(0,e.jsx)(n.a,{href:\"https://gitlab.com/users/sign_up\",children:\"https://gitlab.com/users/sign_up\"})]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Votre \",(0,e.jsx)(n.code,{children:\"First name\"}),\" et \",(0,e.jsx)(n.code,{children:\"Last name\"}),\" : Vous devez indiquer vos vraies informations, notamment votre nom et pr\\xE9nom, pour que vos enseignants puissent vous identifier.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Votre \",(0,e.jsx)(n.code,{children:\"Username\"}),\" doit \\xEAtre : \",(0,e.jsx)(n.code,{children:\"vinci-prenom-nom\"}),\" (sans accent, sans espace, sans majuscule, sans caract\\xE8res sp\\xE9ciaux). Si ce nom est d\\xE9j\\xE0 pris, vous pouvez ajouter l'ann\\xE9e en cours \\xE0 la fin de votre username (\",(0,e.jsx)(n.code,{children:\"vinci-prenom-nom-2025\"}),\" par exemple).\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Votre \",(0,e.jsx)(n.code,{children:\"Email address\"}),\" : vous devez indiquer votre adresse email personnelle \",(0,e.jsx)(n.strong,{children:(0,e.jsx)(n.code,{children:\"@student.vinci.be\"})}),\"!, sinon vous ne pourrez pas obtenir les services gratuits offerts par Gitlab Education.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Votre \",(0,e.jsx)(n.code,{children:\"Password\"}),\" : Vous devez choisir un mot de passe s\\xE9curis\\xE9.\"]}),`\n`,(0,e.jsx)(n.li,{children:\"Vous devez confirmer votre adresse email en donnant le code de v\\xE9rification que vous avez re\\xE7u par email.\"}),`\n`,(0,e.jsxs)(n.li,{children:[\"Vous devez ensuite s\\xE9lectionner un \",(0,e.jsx)(n.code,{children:\"Role\"}),\" et indiquer une r\\xE9ponse pour \",(0,e.jsx)(n.code,{children:\"I'm signing up for Gitlab because:\"}),\". Vous pouvez choisir vos r\\xE9ponses.\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Pour \",(0,e.jsx)(n.strong,{children:(0,e.jsx)(n.code,{children:\"What would you like to do?\"})}),\", vous devez choisir \",(0,e.jsx)(n.strong,{children:(0,e.jsx)(n.code,{children:\"Join a project\"})}),\".\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Pour \",(0,e.jsx)(n.strong,{children:(0,e.jsx)(n.code,{children:\"Who will be using GitLab?\"})}),\", vous devez choisir \",(0,e.jsx)(n.strong,{children:(0,e.jsx)(n.code,{children:\"Just me\"})}),\".\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.ol,{start:\"8\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Une fois votre compte Gitlab cr\\xE9\\xE9, veuillez compl\\xE9ter ce formulaire : \",(0,e.jsx)(n.a,{href:\"https://forms.office.com/e/NbJ1caZQGB\",children:\"https://forms.office.com/e/NbJ1caZQGB\"})]}),`\n`]}),`\n`,(0,e.jsx)(n.h1,{children:(0,e.jsx)(r,{children:\" Comment d\\xE9marrer l'int\\xE9gration continue de code au sein de Gitlab ? \"})}),`\n`,(0,e.jsx)(n.p,{children:\"Nous allons dans un premier temps d\\xE9finir ce qu'est l'int\\xE9gration continue, puis nous verrons comment la mettre en place au sein de Gitlab.\"}),`\n`,(0,e.jsx)(n.h2,{children:\"D\\xE9finition de l'int\\xE9gration continue\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"L'int\\xE9gration continue est une pratique de d\\xE9veloppement logiciel qui consiste \\xE0 \",(0,e.jsx)(n.strong,{children:\"automatiser l'int\\xE9gration du code produit par les d\\xE9veloppeurs dans un r\\xE9f\\xE9rentiel partag\\xE9\"}),\". L'objectif est de d\\xE9tecter et de corriger les probl\\xE8mes d'int\\xE9gration le plus t\\xF4t possible, afin de garantir une qualit\\xE9 de code constante et de faciliter le d\\xE9ploiement continu.\"]}),`\n`,(0,e.jsx)(n.h2,{children:\"Mise en place de l'int\\xE9gration continue avec Gitlab\"}),`\n`,(0,e.jsx)(n.p,{children:\"Gitlab propose des fonctionnalit\\xE9s int\\xE9gr\\xE9es pour mettre en place l'int\\xE9gration continue de code. Voici les \\xE9tapes \\xE0 suivre pour configurer l'int\\xE9gration continue dans Gitlab :\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Prot\\xE9ger la branche principale : pour \\xE9viter les modifications directes sur la branche principale, il est recommand\\xE9 de prot\\xE9ger la branche \",(0,e.jsx)(n.code,{children:\"main\"}),\" ou \",(0,e.jsx)(n.code,{children:\"master\"}),` et\nd'exiger des `,(0,e.jsx)(n.em,{children:\"merge requests\"}),\" pour int\\xE9grer les modifications.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cr\\xE9er un fichier \",(0,e.jsx)(n.code,{children:\".gitlab-ci.yml\"}),\" : ce fichier contient les instructions pour ex\\xE9cuter les tests, le build et le d\\xE9ploiement du code. Il d\\xE9finit les \",(0,e.jsx)(n.em,{children:\"jobs\"}),\" et les \",(0,e.jsx)(n.em,{children:\"stages\"}),\" \\xE0 ex\\xE9cuter lors de l'int\\xE9gration continue.\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.p,{children:[`Les param\\xE8tres pour configurer la protection de la branche principale, la gestion des MR et des builds sont accessibles dans les param\\xE8tres du projet, ou dans les param\\xE8tres du groupe pour appliquer des r\\xE8gles \\xE0 plusieurs projets. Pour les \\xE9tudiants Vinci, ces param\\xE8tres ont \\xE9t\\xE9 configur\\xE9s par vos enseignants.\nPour pouvoir configurer ces param\\xE8tres, vous devez avoir un r\\xF4le de `,(0,e.jsx)(n.code,{children:\"Maintainer\"}),\" ou d'\",(0,e.jsx)(n.code,{children:\"Owner\"}),\" au niveau du groupe ou projet Gitlab.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Lorsque vous cr\\xE9ez un projet Gitlab, nous vous recommandons de configurer Gitlab afin de prot\\xE9ger la branche principale, de configurer les \",(0,e.jsx)(n.em,{children:\"merge requests\"}),\" pour qu'elles soient valid\\xE9es par un autre membre de l'\\xE9quipe avant d'\\xEAtre fusionn\\xE9es, et de configurer un pipeline d'int\\xE9gration continue qui ex\\xE9cute les tests unitaires et v\\xE9rifie la qualit\\xE9 du code.\"]}),`\n`,(0,e.jsx)(n.p,{children:\"Pour les \\xE9tudiants Vinci :\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"vos enseignants ont tent\\xE9 de param\\xE9trer un maximum de r\\xE8gles au niveau du groupe \",(0,e.jsx)(n.code,{children:\"2025-cae-projects\"}),\", puis d'autres r\\xE8gles plus fines au niveau de votre projet Gitlab \",(0,e.jsx)(n.code,{children:\"cae-group-xy\"}),\" se trouvant dans le groupe \",(0,e.jsx)(n.code,{children:\"2025-cae-projects\"}),\".\"]}),`\n`,(0,e.jsx)(n.li,{children:\"vous devez avoir cr\\xE9\\xE9 un compte Gitlab en suivant toutes les consignes donn\\xE9es ci-dessus.\"}),`\n`,(0,e.jsxs)(n.li,{children:[\"vous recevrez un email confirmant que vous avez \\xE9t\\xE9 ajout\\xE9 au projet \",(0,e.jsx)(n.code,{children:\" e-vinci / cae-projects / 2025-cae-projects / cae-group-xy\"}),\" avec le r\\xF4le de \",(0,e.jsx)(n.code,{children:\"Developer\"}),\".\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"ce r\\xF4le de \",(0,e.jsx)(n.code,{children:\"Developer\"}),\" vous permettra de cr\\xE9er des \",(0,e.jsx)(n.em,{children:\"merge requests\"}),\" et de les fusionner. Vous pouvez \\xE9galement configurer le pipeline d'int\\xE9gration continue pour ex\\xE9cuter les tests et v\\xE9rifier la qualit\\xE9 du code.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"par contre, vous ne pourrez pas configurer les r\\xE8gles de protection de la branche principale, ni les r\\xE8gles de \",(0,e.jsx)(n.em,{children:\"merge requests\"}),\" au niveau du groupe. Ces r\\xE8gles ont \\xE9t\\xE9 configur\\xE9es par vos enseignants.\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Les prochaines sections expliquent, \\xE9tape par \\xE9tape, comment configurer l'int\\xE9gration continue dans Gitlab si vous aviez un r\\xF4le de \",(0,e.jsx)(n.code,{children:\"Maintainer\"}),\" ou d'\",(0,e.jsx)(n.code,{children:\"Owner\"}),\" au niveau d'un groupe Gitlab. Ces sections sont \\xE0 titre informatif pour les \\xE9tudiants Vinci.\"]}),`\n`,(0,e.jsx)(n.h2,{children:\"\\u{1F36C} Protection de la branche principale au niveau d'un groupe\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Pour les \\xE9tudiants Vinci, vous n'avez pas de groupe \\xE0 configurer. Ce paragraphe est donc pour compr\\xE9hension uniquement du r\\xF4le d'un \",(0,e.jsx)(n.code,{children:\"Maintainer\"}),\" ou d'un \",(0,e.jsx)(n.code,{children:\"Owner\"}),\" au niveau d'un groupe Gitlab.\"]}),`\n`,(0,e.jsx)(n.p,{children:\"Pour prot\\xE9ger la branche principale au niveau d'un groupe Gitlab, vous pouvez suivre les \\xE9tapes suivantes :\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Acc\\xE9dez aux param\\xE8tres du projet dans Gitlab (\",(0,e.jsx)(n.code,{children:\"Settings\"}),\").\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cliquez sur \",(0,e.jsx)(n.code,{children:\"Repository\"}),\" dans le menu de gauche.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cliquez sur \",(0,e.jsx)(n.code,{children:\"Default branch\"}),\".\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"La branche principale est \",(0,e.jsx)(n.code,{children:\"main\"}),\" par d\\xE9faut (il n'y a rien \\xE0 changer)\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Assurez que l'option \",(0,e.jsx)(n.code,{children:\"Protected\"}),\" est activ\\xE9e.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cochez les options :\",`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Allowed to push : \",(0,e.jsx)(n.code,{children:\"No one\"})]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Allowed to merge : \",(0,e.jsx)(n.code,{children:\"Developers + Maintainers\"}),\".\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cliquez sur \",(0,e.jsx)(n.code,{children:\"Save changes\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Ainsi, les d\\xE9veloppeurs ne pourront pas pousser directement sur la branche principale, mais devront passer par des \",(0,e.jsx)(n.em,{children:\"merge requests\"}),\".\"]}),`\n`,(0,e.jsx)(n.h2,{children:\"\\u{1F36C} Meilleure gestion des MR au niveau d'un groupe\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Pour les \\xE9tudiants Vinci, vous n'avez pas de groupe \\xE0 configurer. Ce paragraphe est donc pour compr\\xE9hension uniquement du r\\xF4le d'un \",(0,e.jsx)(n.code,{children:\"Maintainer\"}),\" ou d'un \",(0,e.jsx)(n.code,{children:\"Owner\"}),\" au niveau d'un groupe Gitlab.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Vous pouvez configurer les \",(0,e.jsx)(n.em,{children:\"merge requests\"}),\" au niveau d'un groupe Gitlab pour appliquer des r\\xE8gles \\xE0 plusieurs projets. Voici comment configurer les \",(0,e.jsx)(n.em,{children:\"merge requests\"}),\" au niveau d'un groupe :\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Acc\\xE9dez aux param\\xE8tres du projet dans Gitlab (\",(0,e.jsx)(n.code,{children:\"Settings\"}),\").\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cliquez sur \",(0,e.jsx)(n.code,{children:\"General\"}),\" dans le menu de gauche.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cliquez sur \",(0,e.jsx)(n.code,{children:\"Merge requests\"}),\".\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cochez l'option \",(0,e.jsx)(n.code,{children:\"Pipelines must succeed Merge requests can't be merged if the latest pipeline did not succeed or is still running.\"}),\".\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cochez l'option \",(0,e.jsx)(n.code,{children:\"All threads must be resolved\"}),\".\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cliquez sur \",(0,e.jsx)(n.code,{children:\"Save changes\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Ainsi, les \",(0,e.jsx)(n.em,{children:\"merge requests\"}),\" ne pourront pas \\xEAtre fusionn\\xE9es si le pipeline d'int\\xE9gration continue a \\xE9chou\\xE9 ou si tous les threads n'ont pas \\xE9t\\xE9 r\\xE9solus.\"]}),`\n`,(0,e.jsx)(n.h2,{children:\"\\u{1F36C} Cr\\xE9ation d'un projet sous Gitlab\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Pour les \\xE9tudiants Vinci, vous ne devez pas cr\\xE9er de Projet Gitlab. Ce paragraphe est donc pour compr\\xE9hension uniquement du r\\xF4le d'un \",(0,e.jsx)(n.code,{children:\"Maintainer\"}),\" ou d'un \",(0,e.jsx)(n.code,{children:\"Owner\"}),\" qui doit cr\\xE9er un projet Gitlab.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Vous pouvez cr\\xE9er un nouveau projet \",(0,e.jsx)(n.code,{children:\"priv\\xE9\"}),\" sur Gitlab en suivant ces \\xE9tapes :\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Rendez-vous sur un groupe Gitlab (par exemple, \",(0,e.jsx)(n.a,{href:\"https://gitlab.com/e-vinci/cae-projects/2025-cae-projects\",children:\"https://gitlab.com/e-vinci/cae-projects/2025-cae-projects\"}),\").\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cliquez sur \",(0,e.jsx)(n.code,{children:\"New project\"}),\" en haut \\xE0 droite.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"S\\xE9lectionnez \",(0,e.jsx)(n.code,{children:\"Create blank project\"}),\".\"]}),`\n`,(0,e.jsx)(n.li,{children:\"Nommez votre projet.\"}),`\n`,(0,e.jsxs)(n.li,{children:[\"Assurez vous que le projet est \",(0,e.jsx)(n.code,{children:\"Private\"}),\".\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cliquez sur \",(0,e.jsx)(n.code,{children:\"Create project\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"\\u{1F36C} Configuration de votre projet sous Gitlab\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Pour les \\xE9tudiants Vinci, vous n'avez pas de projet \\xE0 configurer. Ce paragraphe est donc pour compr\\xE9hension uniquement du r\\xF4le d'un \",(0,e.jsx)(n.code,{children:\"Maintainer\"}),\" ou d'un \",(0,e.jsx)(n.code,{children:\"Owner\"}),\" au niveau d'un projet Gitlab.\"]}),`\n`,(0,e.jsx)(n.h3,{children:\"Protection de la branche principale\"}),`\n`,(0,e.jsx)(n.p,{children:\"Pour prot\\xE9ger la branche principale, vous ne devez normalement rien changer si vous avez cr\\xE9\\xE9 votre projet dans un groupe o\\xF9 vous avez d\\xE9j\\xE0 prot\\xE9g\\xE9 la branche principale.\"}),`\n`,(0,e.jsx)(n.p,{children:\"Pour v\\xE9rifier que tout est en ordre, vous pouvez suivre les \\xE9tapes suivantes :\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Acc\\xE9dez aux param\\xE8tres du projet dans Gitlab (\",(0,e.jsx)(n.code,{children:\"Settings\"}),\").\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cliquez sur \",(0,e.jsx)(n.code,{children:\"Repository\"}),\" dans le menu de gauche.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cliquez sur \",(0,e.jsx)(n.code,{children:\"Protected branches\"}),\".\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"La branche principale est \",(0,e.jsx)(n.code,{children:\"main\"}),\" par d\\xE9faut (il n'y a rien \\xE0 changer)\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Assurez que cela est s\\xE9lectionn\\xE9 : \",(0,e.jsx)(n.code,{children:\"Protect this branch\"}),\".\",`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"Allowed to merge\"}),\" : \",(0,e.jsx)(n.code,{children:\"Developers + Maintainers\"}),\".\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"Allowed to push and merge\"}),\" : \",(0,e.jsx)(n.code,{children:\"No one\"})]}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Ainsi, les d\\xE9veloppeurs ne pourront pas pousser directement sur la branche principale, mais devront passer par des \",(0,e.jsx)(n.em,{children:\"merge requests\"}),\".\"]}),`\n`,(0,e.jsx)(n.h3,{children:\"Meilleure gestion des MR\"}),`\n`,(0,e.jsx)(n.h4,{children:\"Historique des commits plus propre\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Acc\\xE9dez aux param\\xE8tres du projet dans Gitlab (\",(0,e.jsx)(n.code,{children:\"Settings\"}),\").\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cliquez sur \",(0,e.jsx)(n.code,{children:\"Merge requests\"}),\" dans le menu de gauche.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cochez l'option \",(0,e.jsx)(n.code,{children:\"Fast-forward merge\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-txt\",children:(0,e.jsxs)(n.code,{className:\"language-txt code-highlight\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`Fast-forward merges only.\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`When there is a merge conflict, the user is given the option to rebase.\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`If merge trains are enabled, merging is only possible if the branch can be rebased without conflicts.\n`})]})}),`\n`,(0,e.jsxs)(n.ol,{start:\"4\",children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"Squash commits when merging\"}),\" : S\\xE9lectionnez \",(0,e.jsx)(n.code,{children:\"Do not allow\"}),\". \",(0,e.jsx)(n.code,{children:\"Squashing is never performed and the checkbox is hidden.\"})]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cliquez sur \",(0,e.jsx)(n.code,{children:\"Save changes\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h4,{children:\"Approbation des MR\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Acc\\xE9dez aux param\\xE8tres du projet dans Gitlab (\",(0,e.jsx)(n.code,{children:\"Settings\"}),\").\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cliquez sur \",(0,e.jsx)(n.code,{children:\"Merge requests\"}),\" dans le menu de gauche.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Veuillez ajouter au moins un membre de votre \\xE9quipe pour approuver les \",(0,e.jsx)(n.em,{children:\"merge requests\"}),` :\n`,(0,e.jsx)(n.code,{children:\"Approval required\"}),\" : \",(0,e.jsx)(n.code,{children:\"1\"}),\" (ou plus si vous le souhaitez)\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cliquez sur \",(0,e.jsx)(n.code,{children:\"Save changes\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h1,{children:(0,e.jsx)(r,{children:\" Comment mettre en place le workflow d'int\\xE9gration continue ? \"})}),`\n`,(0,e.jsx)(n.h2,{children:\"Introduction\"}),`\n`,(0,e.jsx)(n.p,{children:\"Voici un premier workflow que nous souhaitons appliquer pour l'int\\xE9gration continue de code dans Gitlab :\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsx)(n.li,{children:\"Un d\\xE9veloppeur cr\\xE9e une nouvelle feature branche \\xE0 partir de la branche principale.\"}),`\n`,(0,e.jsx)(n.li,{children:\"Le d\\xE9veloppeur travaille sur sa feature et pousse ses modifications sur la branche distante.\"}),`\n`,(0,e.jsxs)(n.li,{children:[\"Le d\\xE9veloppeur cr\\xE9e une \",(0,e.jsx)(n.em,{children:\"merge request\"}),\" pour fusionner sa branche avec la branche principale.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Un autre membre de l'\\xE9quipe approuve la \",(0,e.jsx)(n.em,{children:\"merge request\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(n.p,{children:\"Nous allons commencer par ajouter le boilerplate de votre API Spring \\xE0 votre projet Gitlab.\"}),`\n`,(0,e.jsx)(n.h2,{children:\"Ajout du boilerplate de votre API Spring\"}),`\n`,(0,e.jsx)(n.p,{children:\"Veuillez cloner votre projet Gitlab sur votre machine locale.\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Vous devriez cr\\xE9er une nouvelle branche \\xE0 partir de la branche principale pour ajouter le boilerplate de votre API Spring. Nous vous proposons de l'appeler \",(0,e.jsx)(n.code,{children:\"api-init\"}),\".\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Pour l'ajout du boilerplate de votre API Spring, vous devez avoir fait tous les tutoriels qui sont demand\\xE9s dans la page \",(0,e.jsx)(n.a,{href:\"../quality/api\",children:\"Qualit\\xE9 de l'API\"}),`.\nLe boilerplate de votre API Spring doit \\xEAtre ajout\\xE9 \\xE0 la racine de votre projet Gitlab, dans un dossier nomm\\xE9 `,(0,e.jsx)(n.strong,{children:(0,e.jsx)(n.code,{children:\"api\"})}),`.\nSi vous avez suivi les tutoriels, vous devriez avoir un projet Spring Boot avec les d\\xE9pendances n\\xE9cessaires pour d\\xE9marrer votre API. En cas de souci, vous pouvez utiliser le dossier `,(0,e.jsx)(n.code,{children:\"api\"}),\" fourni dans ce repository : \",(0,e.jsx)(n.a,{href:\"https://github.com/e-vinci/cae-project-boilerplate\",children:\"cae-project-boilerplate\"}),\".\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Pensez \\xE0 ajouter un fichier \",(0,e.jsx)(n.code,{children:\".gitignore\"}),\" \\xE0 la racine de votre projet (votre repository) pour ignorer les fichiers inutiles.\"]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-txt\",children:(0,e.jsxs)(n.code,{className:\"language-txt code-highlight\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`### Mac\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`.DS_Store\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`### Windows\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`Thumbs.db\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`### Linux\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`lost+found\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`.env\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`*.env\n`})]})}),`\n`,(0,e.jsxs)(n.p,{children:[\"Apr\\xE8s avoir fait ces modifications, vous devez pousser votre branche \",(0,e.jsx)(n.code,{children:\"api-init\"}),\" sur votre repo distant (qui est votre projet Gitlab).\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Comment cr\\xE9er une Merge Request ? \",(0,e.jsx)(n.a,{href:\"https://docs.gitlab.com/ee/user/project/merge_requests/creating_merge_requests.html\",children:\"Voir la documentation\"})]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Sur votre projet Gitlab, vous devriez voir un bouton \",(0,e.jsx)(n.code,{children:\"Create merge request\"}),\" pour cr\\xE9er une \",(0,e.jsx)(n.em,{children:\"merge request\"}),\".\"]}),`\n`,(0,e.jsxs)(n.p,{children:[`TBC : V\\xE9rifier les consignes qui suivent.\nVeuillez compl\\xE9ter le formulaire de `,(0,e.jsx)(n.em,{children:\"merge request\"}),\" en indiquant les informations suivantes :\"]}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Title\"}),\" : \",(0,e.jsx)(n.code,{children:\"Ajout du boilerplate de l'API Spring\"})]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Description\"}),\" :\",`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`Ajout du boilerplate de l'API Spring.\n`})})}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Assign to\"}),\" : Assign to me\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Reviewers\"}),\" : S\\xE9lectionnez un membre de votre \\xE9quipe pour approuver la \",(0,e.jsx)(n.em,{children:\"merge request\"}),\".\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Merge options\"}),\" :\",`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"Delete source branch when merge request is accepted.\"}),\" : Cochez cette option pour supprimer la branche \",(0,e.jsx)(n.code,{children:\"boilerplate-init\"}),\" apr\\xE8s la fusion. On garde malgr\\xE9 tout l'historique complet des commits.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"Squash commits when merge request is accepted.\"}),\" : On pourrait cocher cette option pour fusionner tous les commits de la branche \",(0,e.jsx)(n.code,{children:\"boilerplate-init\"}),\" en un seul commit. N\\xE9anmoins, pour pouvoir suivre tous vos commits, nous vous demandons de ne pas cocher cette option.\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Labels\"}),\" : Ajoutez le label \",(0,e.jsx)(n.code,{children:\"boilerplate\"}),\".\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cliquez sur \",(0,e.jsx)(n.code,{children:\"Create merge request\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.p,{children:[`TBC : V\\xE9rifier les consignes qui suivent.\nVeuillez demander \\xE0 un autre membre de votre \\xE9quipe de revoir et d'approuver votre `,(0,e.jsx)(n.em,{children:\"merge request\"}),\".\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Comment approuver une Merge Request ? \",(0,e.jsx)(n.a,{href:\"https://docs.gitlab.com/ee/user/project/merge_requests/approvals/\",children:\"Voir la documentation\"})]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Une fois la \",(0,e.jsx)(n.em,{children:\"merge request\"}),\" approuv\\xE9e, vous ne pouvez toujours pas fusionner la branche \",(0,e.jsx)(n.code,{children:\"boilerplate-init\"}),\" avec la branche principale.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Vous avez le message suivant : \",(0,e.jsx)(n.code,{children:\"Merge blocked: 1 check failed. The pipeline for this merge request failed.\"}),`\nCela signifie que le pipeline d'int\\xE9gration continue a \\xE9chou\\xE9.`]}),`\n`,(0,e.jsx)(n.p,{children:\"Et c'est normal, car nous n'avons pas encore configur\\xE9 le pipeline d'int\\xE9gration continue pour ex\\xE9cuter les tests et v\\xE9rifier la qualit\\xE9 du code.\"}),`\n`,(0,e.jsx)(n.h1,{children:(0,e.jsx)(r,{children:\" Comment mettre en place un pipeline ? \"})}),`\n`,(0,e.jsx)(n.h2,{children:\"C'est quoi un pipeline ?\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Un pipeline est un ensemble de \",(0,e.jsx)(n.strong,{children:\"jobs\"}),\" qui sont ex\\xE9cut\\xE9s dans un ordre sp\\xE9cifique pour automatiser le processus de construction, de test et de d\\xE9ploiement d'une application.\"]}),`\n`,(0,e.jsx)(n.p,{children:\"Nous allons voir comment configurer un pipeline dans Gitlab pour ex\\xE9cuter les tests unitaires et v\\xE9rifier la qualit\\xE9 du code de notre API.\"}),`\n`,(0,e.jsx)(n.h2,{children:\"Configuration du pipeline\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Pour configurer un pipeline dans Gitlab, vous devez cr\\xE9er un fichier \",(0,e.jsx)(n.strong,{children:(0,e.jsx)(n.code,{children:\".gitlab-ci.yml\"})}),\" \\xE0 la racine de votre projet. Ce fichier contient les instructions pour ex\\xE9cuter les diff\\xE9rents jobs du pipeline.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Au niveau de la Merge requests, il y a un bouton \",(0,e.jsx)(n.code,{children:\"Try out GitLab Pipelines\"}),\" qui permet de tester le pipeline avant de la fusionner.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"A la racine de votre Projet Gitlab (votre repository), dans la branche \",(0,e.jsx)(n.code,{children:\"api-init\"}),\", cr\\xE9ez un fichier \",(0,e.jsx)(n.code,{children:\".gitlab-ci.yml\"}),\" avec le contenu suivant :\"]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-yaml\",children:(0,e.jsxs)(n.code,{className:\"language-yaml code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"api test\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"image\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),\" maven\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),\"3.9.9\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),\"amazoncorretto\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),(0,e.jsx)(n.span,{className:\"token number\",children:\"21\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"script\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),` cd api\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),` mvn clean test\n`]})]})}),`\n`,(0,e.jsxs)(n.p,{children:[\"Ce fichier d\\xE9finit un job nomm\\xE9 \",(0,e.jsx)(n.code,{children:\"api test\"}),\" qui utilise l'image Docker \",(0,e.jsx)(n.code,{children:\"maven:3.9.9-amazoncorretto-21\"}),\" pour ex\\xE9cuter les tests unitaires de l'API Spring. Le script ex\\xE9cute les commandes suivantes :\"]}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"cd api\"}),\" : se d\\xE9place dans le dossier \",(0,e.jsx)(n.code,{children:\"api\"}),\" o\\xF9 se trouve le code de l'API Spring.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"mvn clean test\"}),\" : ex\\xE9cute tous les checks que nous avons configur\\xE9s dans l'API Spring. Il s'agit du Checkstyle, du PMD, du CPD et des tests unitaires.\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Veuillez pousser votre fichier \",(0,e.jsx)(n.code,{children:\".gitlab-ci.yml\"}),\" sur votre d\\xE9p\\xF4t distant.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Maintenant que vous avez ajout\\xE9 le fichier \",(0,e.jsx)(n.code,{children:\".gitlab-ci.yml\"}),\", vous devriez voir un pipeline se d\\xE9clencher automatiquement \\xE0 chaque \",(0,e.jsx)(n.em,{children:\"push\"}),\" sur la branche \",(0,e.jsx)(n.code,{children:\"api-init\"}),\".\"]}),`\n`,(0,e.jsx)(n.h2,{children:\"V\\xE9rification du pipeline\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Pour v\\xE9rifier que le pipeline a \\xE9t\\xE9 ex\\xE9cut\\xE9e avec succ\\xE8s, vous pouvez acc\\xE9der \\xE0 l'onglet \",(0,e.jsx)(n.code,{children:\"Build\"}),\", \",(0,e.jsx)(n.code,{children:\"Pipelines\"}),\" de votre projet Gitlab.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"L\\xE0, vous devriez voir un pipeline avec le job \",(0,e.jsx)(n.code,{children:\"api test\"}),\" qui a \\xE9t\\xE9 ex\\xE9cut\\xE9 avec succ\\xE8s ou qui est toujours en cours.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Si vous cliquez sur le num\\xE9ro du pipeline, vous pouvez voir les d\\xE9tails de l'ex\\xE9cution du job \",(0,e.jsx)(n.code,{children:\"api test\"}),\". Puis vous pouvez voir les logs de l'ex\\xE9cution du job. On voit ici que tous les tests ont ex\\xE9cut\\xE9s avec succ\\xE8s et que le build est r\\xE9ussi.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Nous savons donc que la qualit\\xE9 du commit est bonne et que nous pouvons fusionner la branche \",(0,e.jsx)(n.code,{children:\"api-init\"}),\" avec la branche principale.\"]}),`\n`,(0,e.jsxs)(n.h2,{children:[\"Fusion de la branche \",(0,e.jsx)(n.code,{children:\"api-init\"}),\" avec la branche principale\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Maintenant que le pipeline a \\xE9t\\xE9 ex\\xE9cut\\xE9e avec succ\\xE8s, vous pouvez fusionner la branche \",(0,e.jsx)(n.code,{children:\"api-init\"}),\" avec la branche principale. Pour cela, vous devez approuver la \",(0,e.jsx)(n.em,{children:\"merge request\"}),\".\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Une fois la \",(0,e.jsx)(n.em,{children:\"merge request\"}),\" approuv\\xE9e, vous pouvez cliquer sur le bouton \",(0,e.jsx)(n.code,{children:\"Merge\"}),\" pour fusionner la branche \",(0,e.jsx)(n.code,{children:\"api-init\"}),\" avec la branche principale.\"]}),`\n`,(0,e.jsx)(n.p,{children:\"Attention, une fois la MR fusionn\\xE9e, un nouveau pipeline sera d\\xE9clench\\xE9 pour la branche principale. Vous devez vous assurer que ce pipeline est ex\\xE9cut\\xE9 avec succ\\xE8s avant de continuer.\"}),`\n`,(0,e.jsxs)(n.h2,{children:[\"Terminer la fusion de la branche \",(0,e.jsx)(n.code,{children:\"api-init\"}),\" avec la branche principale\"]}),`\n`,(0,e.jsxs)(n.p,{children:[`Tout est bien g\\xE9r\\xE9 sur le gitlab distant.\nIl reste \\xE0 terminer la fusion de la branche `,(0,e.jsx)(n.code,{children:\"api-init\"}),` avec la branche principale sur votre machine locale.\nPour ce faire, vous devez vous placer sur la branche principale et r\\xE9cup\\xE9rer les derni\\xE8res modifications. Par exemple, si vous \\xEAtes sur la branche `,(0,e.jsx)(n.code,{children:\"api-init\"}),\", vous pouvez ex\\xE9cuter les commandes suivantes :\"]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-bash\",children:(0,e.jsxs)(n.code,{className:\"language-bash code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token function\",children:\"git\"}),` checkout main\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token function\",children:\"git\"}),` pull\n`]})]})}),`\n`,(0,e.jsx)(n.h2,{children:\"R\\xE9sum\\xE9 du workflow actuel pour l'int\\xE9gration continue\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsx)(n.li,{children:\"Un d\\xE9veloppeur cr\\xE9e une nouvelle feature branche \\xE0 partir de la branche principale.\"}),`\n`,(0,e.jsx)(n.li,{children:\"Le d\\xE9veloppeur travaille sur sa feature et pousse ses modifications sur la branche distante.\"}),`\n`,(0,e.jsx)(n.li,{children:\"Le pipeline d'int\\xE9gration continue est d\\xE9clench\\xE9 automatiquement. Si le pipeline \\xE9choue, le d\\xE9veloppeur doit corriger les erreurs avant de continuer.\"}),`\n`,(0,e.jsxs)(n.li,{children:[\"Le d\\xE9veloppeur cr\\xE9e une \",(0,e.jsx)(n.em,{children:\"merge request\"}),\" pour fusionner sa branche avec la branche principale.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Un autre membre de l'\\xE9quipe approuve la \",(0,e.jsx)(n.em,{children:\"merge request\"}),\".\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"La \",(0,e.jsx)(n.em,{children:\"merge request\"}),\" est fusionn\\xE9e avec la branche principale.\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h1,{children:(0,e.jsx)(r,{children:\" Comment g\\xE9rer des t\\xE2ches en parall\\xE8le dans un pipeline ? \"})}),`\n`,(0,e.jsx)(n.h2,{children:\"Introduction\"}),`\n`,(0,e.jsx)(n.p,{children:\"Comment g\\xE9rer des t\\xE2ches en parall\\xE8le dans un pipeline ? Par exemple, comment ex\\xE9cuter les tests du frontend et de l'API en parall\\xE8le dans un pipeline ?\"}),`\n`,(0,e.jsx)(n.p,{children:\"En fait, dans Gitlab, vous pouvez d\\xE9finir plusieurs jobs dans un pipeline et les ex\\xE9cuter en parall\\xE8le.\"}),`\n`,(0,e.jsx)(n.p,{children:\"Si vous avez plusieurs jobs qui ne d\\xE9pendent pas les uns des autres, vous pouvez les ex\\xE9cuter en parall\\xE8le pour gagner du temps.\"}),`\n`,(0,e.jsx)(n.p,{children:\"Nous allons donc ajouter notre frontend React dans le pipeline et ex\\xE9cuter les tests du frontend et de l'API en parall\\xE8le.\"}),`\n`,(0,e.jsx)(n.h2,{children:\"Ajout du boilerplate de votre frontend\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Pour l'ajout du boilerplate de votre frontend, vous devez avoir fait tout ce qui est demand\\xE9 dans la page \",(0,e.jsx)(n.a,{href:\"../quality/frontend\",children:\"Qualit\\xE9 du Frontend\"}),`.\nA la fin de ces tutoriels (le dernier s'appelle `,(0,e.jsx)(n.code,{children:\"unit-tests\"}),\"), vous devriez avoir un projet React avec les d\\xE9pendances n\\xE9cessaires pour d\\xE9marrer un frontend. N\\xE9anmoins, ce frontend n'int\\xE8gre pas la librairie MUI.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Pour vous aider, nous avons cr\\xE9\\xE9 un boilerplate pour le frontend qui reprend les tutoriels pr\\xE9c\\xE9dents et qui int\\xE8gre la librairie MUI. Vous pouvez le trouver ici : \",(0,e.jsx)(n.a,{href:\"https://github.com/e-vinci/cae-project-boilerplate\",children:\"cae-project-boilerplate\"}),\".\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Vous devriez cr\\xE9er une nouvelle branche \\xE0 partir de la branche principale pour ajouter le boilerplate de votre frontend React dans un dossier nomm\\xE9 \",(0,e.jsx)(n.strong,{children:(0,e.jsx)(n.code,{children:\"/frontend\"})}),\". Nous vous proposons d'appeler votre nouvelle branche \",(0,e.jsx)(n.code,{children:\"frontend-init\"}),\".\"]}),`\n`,(0,e.jsx)(n.h2,{children:\"Mise \\xE0 jour du pipeline\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Veuillez mettre \\xE0 jour votre fichier \",(0,e.jsx)(n.code,{children:\".gitlab-ci.yml\"}),\" pour ex\\xE9cuter les tests du frontend et de l'API en parall\\xE8le :\"]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-yaml\",children:(0,e.jsxs)(n.code,{className:\"language-yaml code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"api test\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"image\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),\" maven\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),\"3.9.9\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),\"amazoncorretto\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),(0,e.jsx)(n.span,{className:\"token number\",children:\"21\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"script\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),` cd api\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),` mvn clean test\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line highlight-line\",children:[(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"frontend test\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line highlight-line\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"image\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),\" node\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),(0,e.jsx)(n.span,{className:\"token number\",children:\"20\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line highlight-line\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"script\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line highlight-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),` cd frontend\n`]}),(0,e.jsxs)(n.span,{className:\"code-line highlight-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),` npm install\n`]}),(0,e.jsxs)(n.span,{className:\"code-line highlight-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),` npm run lint\n`]}),(0,e.jsxs)(n.span,{className:\"code-line highlight-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),` npm run coverage\n`]})]})}),`\n`,(0,e.jsxs)(n.p,{children:[\"Ce fichier d\\xE9finit deux jobs \",(0,e.jsx)(n.code,{children:\"api test\"}),\" et \",(0,e.jsx)(n.code,{children:\"frontend test\"}),\" qui ex\\xE9cutent les tests de l'API Spring et du frontend React en parall\\xE8le.\"]}),`\n`,(0,e.jsx)(n.p,{children:\"Ici, pour le frontend, nous souhaitons d'abord ex\\xE9cuter les tests du linter, puis les tests unitaires pour g\\xE9n\\xE9rer un rapport de couverture de code.\"}),`\n`,(0,e.jsx)(n.p,{children:\"Veuillez pousser tous vos modifications sur votre repo distant.\"}),`\n`,(0,e.jsx)(n.h2,{children:\"V\\xE9rification du pipeline\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Apr\\xE8s avoir pouss\\xE9 vos modifications, vous devriez voir un nouveau pipeline se d\\xE9clencher automatiquement \\xE0 chaque \",(0,e.jsx)(n.em,{children:\"push\"}),\" sur la branche \",(0,e.jsx)(n.code,{children:\"frontend-init\"}),\".\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Vous devriez voir deux jobs \",(0,e.jsx)(n.code,{children:\"api test\"}),\" et \",(0,e.jsx)(n.code,{children:\"frontend test\"}),` qui sont ex\\xE9cut\\xE9s en\nparall\\xE8le.`]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Une fois le pipeline ex\\xE9cut\\xE9 avec succ\\xE8s, nous pourrions fusionner la branche \",(0,e.jsx)(n.code,{children:\"frontend-init\"}),\" avec la branche principale.\"]}),`\n`,(0,e.jsx)(n.p,{children:\"Mais avant cela, nous souhaitons d\\xE9couvrir un nouveau concept, la notion d'artefacts pour stocker les rapports de tests g\\xE9n\\xE9r\\xE9s par les jobs du pipeline.\"}),`\n`,(0,e.jsx)(n.h1,{children:(0,e.jsx)(r,{children:\" Comment sauvegarder des rapports dans Gitlab ? \"})}),`\n`,(0,e.jsx)(n.h2,{children:\"Introduction\"}),`\n`,(0,e.jsx)(n.p,{children:\"Dans un pipeline, il est souvent n\\xE9cessaire de g\\xE9n\\xE9rer des rapports de tests, de couverture de code, de qualit\\xE9 du code, etc. Ces rapports peuvent \\xEAtre stock\\xE9s dans Gitlab en tant qu'artefacts pour les consulter ult\\xE9rieurement.\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Nous allons voir comment sauvegarder les rapports de tests g\\xE9n\\xE9r\\xE9s par les jobs \",(0,e.jsx)(n.code,{children:\"api test\"}),\" et \",(0,e.jsx)(n.code,{children:\"frontend test\"}),\" dans Gitlab.\"]}),`\n`,(0,e.jsx)(n.h2,{children:\"Sauvegarde des rapports\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Pour sauvegarder les rapports de tests dans Gitlab, vous devez utiliser l'option \",(0,e.jsx)(n.code,{children:\"artifacts\"}),\" dans le fichier \",(0,e.jsx)(n.code,{children:\".gitlab-ci.yml\"}),\".\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Voici comment mettre \\xE0 jour votre fichier \",(0,e.jsx)(n.code,{children:\".gitlab-ci.yml\"}),\" pour sauvegarder les rapports de tests :\"]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-yaml\",children:(0,e.jsxs)(n.code,{className:\"language-yaml code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line line-number\",line:\"1\",children:[(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"api test\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line line-number\",line:\"2\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"image\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),\" maven\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),\"3.9.9\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),\"amazoncorretto\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),(0,e.jsx)(n.span,{className:\"token number\",children:\"21\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line line-number\",line:\"3\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"script\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line line-number\",line:\"4\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),` cd api\n`]}),(0,e.jsxs)(n.span,{className:\"code-line line-number\",line:\"5\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),` mvn clean test\n`]}),(0,e.jsxs)(n.span,{className:\"code-line line-number highlight-line\",line:\"6\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"artifacts\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line line-number highlight-line\",line:\"7\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"paths\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line line-number highlight-line\",line:\"8\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),` api/target/reports/\n`]}),(0,e.jsxs)(n.span,{className:\"code-line line-number highlight-line\",line:\"9\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),` api/target/site/\n`]}),(0,e.jsxs)(n.span,{className:\"code-line line-number highlight-line\",line:\"10\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),\" api/target/surefire\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),`reports/\n`]}),(0,e.jsx)(n.span,{className:\"code-line line-number\",line:\"11\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line line-number\",line:\"12\",children:[(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"frontend test\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line line-number\",line:\"13\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"image\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),\" node\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),(0,e.jsx)(n.span,{className:\"token number\",children:\"20\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line line-number\",line:\"14\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"script\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line line-number\",line:\"15\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),` cd frontend\n`]}),(0,e.jsxs)(n.span,{className:\"code-line line-number\",line:\"16\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),` npm install\n`]}),(0,e.jsxs)(n.span,{className:\"code-line line-number\",line:\"17\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),` npm run lint\n`]}),(0,e.jsxs)(n.span,{className:\"code-line line-number\",line:\"18\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),` npm run coverage\n`]}),(0,e.jsxs)(n.span,{className:\"code-line line-number highlight-line\",line:\"19\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"artifacts\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line line-number highlight-line\",line:\"20\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"paths\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line line-number highlight-line\",line:\"21\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),` frontend/coverage/\n`]})]})}),`\n`,(0,e.jsxs)(n.p,{children:[\"Ce fichier d\\xE9finit deux jobs \",(0,e.jsx)(n.code,{children:\"api test\"}),\" et \",(0,e.jsx)(n.code,{children:\"frontend test\"}),\" qui ex\\xE9cutent les tests de l'API Spring et du frontend React en parall\\xE8le. Les rapports de tests g\\xE9n\\xE9r\\xE9s par ces jobs sont sauvegard\\xE9s dans Gitlab en tant qu'artefacts.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Pour l'API Spring, nous sauvegardons les rapports dans les dossiers \",(0,e.jsx)(n.code,{children:\"api/target/reports/\"}),\", \",(0,e.jsx)(n.code,{children:\"api/target/site/\"}),\" et \",(0,e.jsx)(n.code,{children:\"api/target/surefire-reports/\"}),\". Pour le frontend React, nous sauvegardons les rapports dans le dossier \",(0,e.jsx)(n.code,{children:\"frontend/coverage/\"}),\".\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Pour retrouver ces documents dans Gitlab, vous pouvez acc\\xE9der \\xE0 l'onglet \",(0,e.jsx)(n.code,{children:\"Build\"}),\", \",(0,e.jsx)(n.code,{children:\"Pipelines\"}),\" de votre projet Gitlab. Vous devriez voir un pipeline avec les jobs \",(0,e.jsx)(n.code,{children:\"api test\"}),\" et \",(0,e.jsx)(n.code,{children:\"frontend test\"}),\" qui ont \\xE9t\\xE9 ex\\xE9cut\\xE9s avec succ\\xE8s.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Si vous cliquez sur le num\\xE9ro du pipeline, vous pouvez voir les d\\xE9tails de l'ex\\xE9cution du job \",(0,e.jsx)(n.code,{children:\"api test\"}),\" ou \",(0,e.jsx)(n.code,{children:\"frontend test\"}),`.\nEn cliquant sur le job, vous pouvez t\\xE9l\\xE9charger ou voir les artefacts g\\xE9n\\xE9r\\xE9s par le job.`]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Pour voir les artefacts g\\xE9n\\xE9r\\xE9s par le job \",(0,e.jsx)(n.code,{children:\"api test\"}),\", vous pouvez cliquer sur le job \",(0,e.jsx)(n.code,{children:\"api test\"}),\" dans le pipeline. Cliquez ensuite sur le bouton \",(0,e.jsx)(n.code,{children:\"Browse\"}),\" pour voir les artefacts g\\xE9n\\xE9r\\xE9s par le job.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Idem pour le job \",(0,e.jsx)(n.code,{children:\"frontend test\"}),\". Allez dans le pipeline, cliquez sur le job \",(0,e.jsx)(n.code,{children:\"frontend test\"}),\" et cliquez sur le bouton \",(0,e.jsx)(n.code,{children:\"Browse\"}),\" pour voir les artefacts g\\xE9n\\xE9r\\xE9s par le job.\"]}),`\n`,(0,e.jsx)(n.h2,{children:\"Int\\xE9gration des changements dans la branche principale\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Maintenant que vous avez ajout\\xE9 les artefacts dans votre pipeline, vous pouvez fusionner la branche \",(0,e.jsx)(n.code,{children:\"frontend-init\"}),\" avec la branche principale.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Pour cela, vous devez cr\\xE9er une \",(0,e.jsx)(n.em,{children:\"merge request\"}),\" pour fusionner la branche \",(0,e.jsx)(n.code,{children:\"frontend-init\"}),\" avec la branche principale. Une fois la \",(0,e.jsx)(n.em,{children:\"merge request\"}),\" approuv\\xE9e, vous pouvez cliquer sur le bouton \",(0,e.jsx)(n.code,{children:\"Merge\"}),\" pour fusionner la branche \",(0,e.jsx)(n.code,{children:\"frontend-init\"}),\" avec la branche principale.\"]}),`\n`,(0,e.jsx)(n.p,{children:\"N'oubliez pas de mettre \\xE0 jour votre branche principale sur votre machine locale apr\\xE8s la fusion.\"}),`\n`,(0,e.jsx)(n.h1,{children:(0,e.jsx)(r,{children:\" Est-ce que cette int\\xE9gration continue est vraiment utile ? \"})}),`\n`,(0,e.jsx)(n.h2,{children:\"Intro\"}),`\n`,(0,e.jsx)(n.p,{children:\"Imaginons que quelqu'un vient \\xE0 changer le code du frontend ou de l'API. Il est possible que ces changements affectent le bon fonctionnement de l'application.\"}),`\n`,(0,e.jsx)(n.p,{children:\"L'int\\xE9gration continue permet de d\\xE9tecter ces probl\\xE8mes le plus t\\xF4t possible, en ex\\xE9cutant automatiquement les tests et en v\\xE9rifiant la qualit\\xE9 du code \\xE0 chaque modification du code.\"}),`\n`,(0,e.jsx)(n.p,{children:\"Pour ce tutoriel, veuillez cr\\xE9er un souci au niveau du frontend.\"}),`\n`,(0,e.jsx)(n.h2,{children:\"Cr\\xE9ation d'un souci au niveau du frontend\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Vous savez qu'il est impossible de faire un \",(0,e.jsx)(n.code,{children:\"push\"}),\" directement sur la branche principale. Vous devez passer par une \",(0,e.jsx)(n.em,{children:\"merge request\"}),\".\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Veuillez donc cr\\xE9er une nouvelle branche au niveau du frontend que nous allons appeler \",(0,e.jsx)(n.code,{children:\"update-login-color\"}),\".\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Veuillez mettre \\xE0 jour le fichier \",(0,e.jsx)(n.code,{children:\"src/components/pages/LoginPage.tsx\"}),` pour changer la couleur du formulaire de connexion (de 'secondary.light' vers \"primary.light\").`]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-tsx\",children:(0,e.jsxs)(n.code,{className:\"language-tsx code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"return\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"<\"}),(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Box\"})]}),`\n`]})]}),(0,e.jsx)(n.span,{className:\"code-line\",children:(0,e.jsxs)(n.span,{className:\"token tag\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token attr-name\",children:\"sx\"}),(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[(0,e.jsx)(n.span,{className:\"token script-punctuation punctuation\",children:\"=\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]})]})}),(0,e.jsx)(n.span,{className:\"code-line\",children:(0,e.jsx)(n.span,{className:\"token tag\",children:(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[\"        margin\",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"2\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]})})}),(0,e.jsx)(n.span,{className:\"code-line\",children:(0,e.jsx)(n.span,{className:\"token tag\",children:(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[\"        padding\",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"3\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]})})}),(0,e.jsx)(n.span,{className:\"code-line highlight-line\",children:(0,e.jsx)(n.span,{className:\"token tag\",children:(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[\"        backgroundColor\",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"primary.light\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]})})}),(0,e.jsx)(n.span,{className:\"code-line\",children:(0,e.jsx)(n.span,{className:\"token tag\",children:(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[\"        borderRadius\",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"4\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]})})}),(0,e.jsx)(n.span,{className:\"code-line\",children:(0,e.jsx)(n.span,{className:\"token tag\",children:(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[\"        boxShadow\",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"2\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]})})}),(0,e.jsx)(n.span,{className:\"code-line\",children:(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"})]}),`\n`]})}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),(0,e.jsx)(n.span,{className:\"token plain-text\",children:`\n`})]})]})}),`\n`,(0,e.jsxs)(n.p,{children:[\"Faite un \",(0,e.jsx)(n.code,{children:\"commit\"}),\" et un \",(0,e.jsx)(n.code,{children:\"push\"}),\" sur votre branche \",(0,e.jsx)(n.code,{children:\"update-login-color\"}),\".\"]}),`\n`,(0,e.jsx)(n.h2,{children:\"V\\xE9rification du pipeline\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Apr\\xE8s avoir pouss\\xE9 vos modifications, vous devriez voir un nouveau pipeline se d\\xE9clencher automatiquement \\xE0 chaque \",(0,e.jsx)(n.em,{children:\"push\"}),\" sur la branche \",(0,e.jsx)(n.code,{children:\"update-login-color\"}),\".\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Vous devriez voir deux jobs \",(0,e.jsx)(n.code,{children:\"api test\"}),\" et \",(0,e.jsx)(n.code,{children:\"frontend test\"}),\" qui sont ex\\xE9cut\\xE9s en parall\\xE8le.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Et finalement, vous devriez voir que le job \",(0,e.jsx)(n.code,{children:\"frontend test\"}),\" a \\xE9chou\\xE9. En cliquant sur le job \",(0,e.jsx)(n.code,{children:\"frontend test\"}),`, vous pouvez voir les d\\xE9tails de l'\\xE9chec.\nVoici le message d'erreur que vous devriez voir :`]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-txt\",children:(0,e.jsxs)(n.code,{className:\"language-txt code-highlight\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`/builds/e-vinci/cae-projects/2025-cae-projects/cae-xy/frontend/src/components/pages/LoginPage.tsx\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:\"  40:26  error  Replace `\\\"primary.light\\\"` with `'primary.light'`  prettier/prettier\\n\"}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\\u2716 1 problem (1 error, 0 warnings)\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:\"  1 error and 0 warnings potentially fixable with the `--fix` option.\\n\"})]})}),`\n`,(0,e.jsxs)(n.p,{children:[\"On voit ici que le linter ESLint a d\\xE9tect\\xE9 une erreur dans le fichier \",(0,e.jsx)(n.code,{children:\"src/components/pages/LoginPage.tsx\"}),\". Nous avons utilis\\xE9 des guillemets doubles au lieu de simples pour la couleur du formulaire de connexion !!!\"]}),`\n`,(0,e.jsx)(n.h2,{children:\"Correction de l'erreur\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Pour corriger cette erreur, vous devez mettre \\xE0 jour le fichier \",(0,e.jsx)(n.code,{children:\"src/components/pages/LoginPage.tsx\"}),\" pour changer la couleur du formulaire de connexion de \",(0,e.jsx)(n.code,{children:'\"primary.light\"'}),\" vers \",(0,e.jsx)(n.code,{children:\"'primary.light'\"}),\".\"]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-tsx\",children:(0,e.jsxs)(n.code,{className:\"language-tsx code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"return\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"<\"}),(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Box\"})]}),`\n`]})]}),(0,e.jsx)(n.span,{className:\"code-line\",children:(0,e.jsxs)(n.span,{className:\"token tag\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token attr-name\",children:\"sx\"}),(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[(0,e.jsx)(n.span,{className:\"token script-punctuation punctuation\",children:\"=\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]})]})}),(0,e.jsx)(n.span,{className:\"code-line\",children:(0,e.jsx)(n.span,{className:\"token tag\",children:(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[\"        margin\",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"2\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]})})}),(0,e.jsx)(n.span,{className:\"code-line\",children:(0,e.jsx)(n.span,{className:\"token tag\",children:(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[\"        padding\",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"3\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]})})}),(0,e.jsx)(n.span,{className:\"code-line highlight-line\",children:(0,e.jsx)(n.span,{className:\"token tag\",children:(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[\"        backgroundColor\",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:\"'primary.light'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]})})}),(0,e.jsx)(n.span,{className:\"code-line\",children:(0,e.jsx)(n.span,{className:\"token tag\",children:(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[\"        borderRadius\",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"4\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]})})}),(0,e.jsx)(n.span,{className:\"code-line\",children:(0,e.jsx)(n.span,{className:\"token tag\",children:(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[\"        boxShadow\",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"2\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]})})}),(0,e.jsx)(n.span,{className:\"code-line\",children:(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"})]}),`\n`]})}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),(0,e.jsx)(n.span,{className:\"token plain-text\",children:`\n`})]})]})}),`\n`,(0,e.jsxs)(n.p,{children:[\"Faite un \",(0,e.jsx)(n.code,{children:\"commit\"}),\" et un \",(0,e.jsx)(n.code,{children:\"push\"}),\" sur votre branche \",(0,e.jsx)(n.code,{children:\"update-login-color\"}),\".\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Cette fois-ci, le job \",(0,e.jsx)(n.code,{children:\"frontend test\"}),\" devrait \\xEAtre ex\\xE9cut\\xE9 avec succ\\xE8s ! \\u{1F389}\"]})]})}function m(i={}){let{wrapper:n}=i.components||{};return n?(0,e.jsx)(n,{...i,children:(0,e.jsx)(h,{...i})}):h(i)}function c(i,n){throw new Error(\"Expected \"+(n?\"component\":\"object\")+\" `\"+i+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return j(P);})();\n;return Component;"},"_id":"quality/ci.mdx","_raw":{"sourceFilePath":"quality/ci.mdx","sourceFileName":"ci.mdx","sourceFileDir":"quality","contentType":"mdx","flattenedPath":"quality/ci"},"type":"Page"},"body":"var Component=(()=>{var g=Object.create;var t=Object.defineProperty;var v=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var N=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var k=(i,n)=>()=>(n||i((n={exports:{}}).exports,n),n.exports),q=(i,n)=>{for(var a in n)t(i,a,{get:n[a],enumerable:!0})},d=(i,n,a,l)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let r of b(n))!f.call(i,r)&&r!==a&&t(i,r,{get:()=>n[r],enumerable:!(l=v(n,r))||l.enumerable});return i};var z=(i,n,a)=>(a=i!=null?g(N(i)):{},d(n||!i||!i.__esModule?t(a,\"default\",{value:i,enumerable:!0}):a,i)),j=i=>d(t({},\"__esModule\",{value:!0}),i);var p=k((y,u)=>{u.exports=_jsx_runtime});var P={};q(P,{default:()=>m,frontmatter:()=>x});var e=z(p()),x={title:\"CI\",description:\"Int\\xE9gration continue\",date:\"20/01/2025\"};function h(i){let n={a:\"a\",code:\"code\",em:\"em\",h1:\"h1\",h2:\"h2\",h3:\"h3\",h4:\"h4\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",span:\"span\",strong:\"strong\",ul:\"ul\",...i.components},{InternalPageMenu:a,InternalPageMenuItem:l,InternalPageTitle:r,PathViewer:o,PathViewerItem:s}=n;return a||c(\"InternalPageMenu\",!0),l||c(\"InternalPageMenuItem\",!0),r||c(\"InternalPageTitle\",!0),o||c(\"PathViewer\",!0),s||c(\"PathViewerItem\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(a,{children:[(0,e.jsxs)(o,{children:[(0,e.jsx)(s,{to:\"/\",children:\" CAE \"}),(0,e.jsx)(s,{to:\"/quality\",children:\" Qualit\\xE9 \"}),(0,e.jsx)(s,{selected:!0,children:\" Int\\xE9gration Continue \"})]}),(0,e.jsx)(l,{children:\" Cr\\xE9ation de votre compte sous Gitlab \"}),(0,e.jsx)(l,{children:\" Comment d\\xE9marrer l'int\\xE9gration continue de code au sein de Gitlab ? \"}),(0,e.jsx)(l,{children:\" Comment mettre en place le workflow d'int\\xE9gration continue ? \"}),(0,e.jsx)(l,{children:\" Comment mettre en place un pipeline ? \"}),(0,e.jsx)(l,{children:\" Comment g\\xE9rer des t\\xE2ches en parall\\xE8le dans un pipeline ? \"}),(0,e.jsx)(l,{children:\" Comment sauvegarder des rapports dans Gitlab ? \"}),(0,e.jsx)(l,{children:\" Est-ce que cette int\\xE9gration continue est vraiment utile ? \"})]}),`\n`,(0,e.jsx)(n.h1,{children:(0,e.jsx)(r,{children:\" Cr\\xE9ation de votre compte Gitlab \"})}),`\n`,(0,e.jsx)(n.p,{children:\"Pour les \\xE9tudiants Vinci, vous devez cr\\xE9er un compte Gitlab. Ce paragraphe est donc pour vous.\"}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.strong,{children:\"\\u{1F449} CONSIGNE\"}),\" :\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Cr\\xE9ez un compte sur Gitlab en vous rendant sur \",(0,e.jsx)(n.a,{href:\"https://gitlab.com/users/sign_up\",children:\"https://gitlab.com/users/sign_up\"})]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Votre \",(0,e.jsx)(n.code,{children:\"First name\"}),\" et \",(0,e.jsx)(n.code,{children:\"Last name\"}),\" : Vous devez indiquer vos vraies informations, notamment votre nom et pr\\xE9nom, pour que vos enseignants puissent vous identifier.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Votre \",(0,e.jsx)(n.code,{children:\"Username\"}),\" doit \\xEAtre : \",(0,e.jsx)(n.code,{children:\"vinci-prenom-nom\"}),\" (sans accent, sans espace, sans majuscule, sans caract\\xE8res sp\\xE9ciaux). Si ce nom est d\\xE9j\\xE0 pris, vous pouvez ajouter l'ann\\xE9e en cours \\xE0 la fin de votre username (\",(0,e.jsx)(n.code,{children:\"vinci-prenom-nom-2025\"}),\" par exemple).\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Votre \",(0,e.jsx)(n.code,{children:\"Email address\"}),\" : vous devez indiquer votre adresse email personnelle \",(0,e.jsx)(n.strong,{children:(0,e.jsx)(n.code,{children:\"@student.vinci.be\"})}),\"!, sinon vous ne pourrez pas obtenir les services gratuits offerts par Gitlab Education.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Votre \",(0,e.jsx)(n.code,{children:\"Password\"}),\" : Vous devez choisir un mot de passe s\\xE9curis\\xE9.\"]}),`\n`,(0,e.jsx)(n.li,{children:\"Vous devez confirmer votre adresse email en donnant le code de v\\xE9rification que vous avez re\\xE7u par email.\"}),`\n`,(0,e.jsxs)(n.li,{children:[\"Vous devez ensuite s\\xE9lectionner un \",(0,e.jsx)(n.code,{children:\"Role\"}),\" et indiquer une r\\xE9ponse pour \",(0,e.jsx)(n.code,{children:\"I'm signing up for Gitlab because:\"}),\". Vous pouvez choisir vos r\\xE9ponses.\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Pour \",(0,e.jsx)(n.strong,{children:(0,e.jsx)(n.code,{children:\"What would you like to do?\"})}),\", vous devez choisir \",(0,e.jsx)(n.strong,{children:(0,e.jsx)(n.code,{children:\"Join a project\"})}),\".\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Pour \",(0,e.jsx)(n.strong,{children:(0,e.jsx)(n.code,{children:\"Who will be using GitLab?\"})}),\", vous devez choisir \",(0,e.jsx)(n.strong,{children:(0,e.jsx)(n.code,{children:\"Just me\"})}),\".\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.ol,{start:\"8\",children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Une fois votre compte Gitlab cr\\xE9\\xE9, veuillez compl\\xE9ter ce formulaire : \",(0,e.jsx)(n.a,{href:\"https://forms.office.com/e/NbJ1caZQGB\",children:\"https://forms.office.com/e/NbJ1caZQGB\"})]}),`\n`]}),`\n`,(0,e.jsx)(n.h1,{children:(0,e.jsx)(r,{children:\" Comment d\\xE9marrer l'int\\xE9gration continue de code au sein de Gitlab ? \"})}),`\n`,(0,e.jsx)(n.p,{children:\"Nous allons dans un premier temps d\\xE9finir ce qu'est l'int\\xE9gration continue, puis nous verrons comment la mettre en place au sein de Gitlab.\"}),`\n`,(0,e.jsx)(n.h2,{children:\"D\\xE9finition de l'int\\xE9gration continue\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"L'int\\xE9gration continue est une pratique de d\\xE9veloppement logiciel qui consiste \\xE0 \",(0,e.jsx)(n.strong,{children:\"automatiser l'int\\xE9gration du code produit par les d\\xE9veloppeurs dans un r\\xE9f\\xE9rentiel partag\\xE9\"}),\". L'objectif est de d\\xE9tecter et de corriger les probl\\xE8mes d'int\\xE9gration le plus t\\xF4t possible, afin de garantir une qualit\\xE9 de code constante et de faciliter le d\\xE9ploiement continu.\"]}),`\n`,(0,e.jsx)(n.h2,{children:\"Mise en place de l'int\\xE9gration continue avec Gitlab\"}),`\n`,(0,e.jsx)(n.p,{children:\"Gitlab propose des fonctionnalit\\xE9s int\\xE9gr\\xE9es pour mettre en place l'int\\xE9gration continue de code. Voici les \\xE9tapes \\xE0 suivre pour configurer l'int\\xE9gration continue dans Gitlab :\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Prot\\xE9ger la branche principale : pour \\xE9viter les modifications directes sur la branche principale, il est recommand\\xE9 de prot\\xE9ger la branche \",(0,e.jsx)(n.code,{children:\"main\"}),\" ou \",(0,e.jsx)(n.code,{children:\"master\"}),` et\nd'exiger des `,(0,e.jsx)(n.em,{children:\"merge requests\"}),\" pour int\\xE9grer les modifications.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cr\\xE9er un fichier \",(0,e.jsx)(n.code,{children:\".gitlab-ci.yml\"}),\" : ce fichier contient les instructions pour ex\\xE9cuter les tests, le build et le d\\xE9ploiement du code. Il d\\xE9finit les \",(0,e.jsx)(n.em,{children:\"jobs\"}),\" et les \",(0,e.jsx)(n.em,{children:\"stages\"}),\" \\xE0 ex\\xE9cuter lors de l'int\\xE9gration continue.\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.p,{children:[`Les param\\xE8tres pour configurer la protection de la branche principale, la gestion des MR et des builds sont accessibles dans les param\\xE8tres du projet, ou dans les param\\xE8tres du groupe pour appliquer des r\\xE8gles \\xE0 plusieurs projets. Pour les \\xE9tudiants Vinci, ces param\\xE8tres ont \\xE9t\\xE9 configur\\xE9s par vos enseignants.\nPour pouvoir configurer ces param\\xE8tres, vous devez avoir un r\\xF4le de `,(0,e.jsx)(n.code,{children:\"Maintainer\"}),\" ou d'\",(0,e.jsx)(n.code,{children:\"Owner\"}),\" au niveau du groupe ou projet Gitlab.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Lorsque vous cr\\xE9ez un projet Gitlab, nous vous recommandons de configurer Gitlab afin de prot\\xE9ger la branche principale, de configurer les \",(0,e.jsx)(n.em,{children:\"merge requests\"}),\" pour qu'elles soient valid\\xE9es par un autre membre de l'\\xE9quipe avant d'\\xEAtre fusionn\\xE9es, et de configurer un pipeline d'int\\xE9gration continue qui ex\\xE9cute les tests unitaires et v\\xE9rifie la qualit\\xE9 du code.\"]}),`\n`,(0,e.jsx)(n.p,{children:\"Pour les \\xE9tudiants Vinci :\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"vos enseignants ont tent\\xE9 de param\\xE9trer un maximum de r\\xE8gles au niveau du groupe \",(0,e.jsx)(n.code,{children:\"2025-cae-projects\"}),\", puis d'autres r\\xE8gles plus fines au niveau de votre projet Gitlab \",(0,e.jsx)(n.code,{children:\"cae-group-xy\"}),\" se trouvant dans le groupe \",(0,e.jsx)(n.code,{children:\"2025-cae-projects\"}),\".\"]}),`\n`,(0,e.jsx)(n.li,{children:\"vous devez avoir cr\\xE9\\xE9 un compte Gitlab en suivant toutes les consignes donn\\xE9es ci-dessus.\"}),`\n`,(0,e.jsxs)(n.li,{children:[\"vous recevrez un email confirmant que vous avez \\xE9t\\xE9 ajout\\xE9 au projet \",(0,e.jsx)(n.code,{children:\" e-vinci / cae-projects / 2025-cae-projects / cae-group-xy\"}),\" avec le r\\xF4le de \",(0,e.jsx)(n.code,{children:\"Developer\"}),\".\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"ce r\\xF4le de \",(0,e.jsx)(n.code,{children:\"Developer\"}),\" vous permettra de cr\\xE9er des \",(0,e.jsx)(n.em,{children:\"merge requests\"}),\" et de les fusionner. Vous pouvez \\xE9galement configurer le pipeline d'int\\xE9gration continue pour ex\\xE9cuter les tests et v\\xE9rifier la qualit\\xE9 du code.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"par contre, vous ne pourrez pas configurer les r\\xE8gles de protection de la branche principale, ni les r\\xE8gles de \",(0,e.jsx)(n.em,{children:\"merge requests\"}),\" au niveau du groupe. Ces r\\xE8gles ont \\xE9t\\xE9 configur\\xE9es par vos enseignants.\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Les prochaines sections expliquent, \\xE9tape par \\xE9tape, comment configurer l'int\\xE9gration continue dans Gitlab si vous aviez un r\\xF4le de \",(0,e.jsx)(n.code,{children:\"Maintainer\"}),\" ou d'\",(0,e.jsx)(n.code,{children:\"Owner\"}),\" au niveau d'un groupe Gitlab. Ces sections sont \\xE0 titre informatif pour les \\xE9tudiants Vinci.\"]}),`\n`,(0,e.jsx)(n.h2,{children:\"\\u{1F36C} Protection de la branche principale au niveau d'un groupe\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Pour les \\xE9tudiants Vinci, vous n'avez pas de groupe \\xE0 configurer. Ce paragraphe est donc pour compr\\xE9hension uniquement du r\\xF4le d'un \",(0,e.jsx)(n.code,{children:\"Maintainer\"}),\" ou d'un \",(0,e.jsx)(n.code,{children:\"Owner\"}),\" au niveau d'un groupe Gitlab.\"]}),`\n`,(0,e.jsx)(n.p,{children:\"Pour prot\\xE9ger la branche principale au niveau d'un groupe Gitlab, vous pouvez suivre les \\xE9tapes suivantes :\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Acc\\xE9dez aux param\\xE8tres du projet dans Gitlab (\",(0,e.jsx)(n.code,{children:\"Settings\"}),\").\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cliquez sur \",(0,e.jsx)(n.code,{children:\"Repository\"}),\" dans le menu de gauche.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cliquez sur \",(0,e.jsx)(n.code,{children:\"Default branch\"}),\".\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"La branche principale est \",(0,e.jsx)(n.code,{children:\"main\"}),\" par d\\xE9faut (il n'y a rien \\xE0 changer)\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Assurez que l'option \",(0,e.jsx)(n.code,{children:\"Protected\"}),\" est activ\\xE9e.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cochez les options :\",`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Allowed to push : \",(0,e.jsx)(n.code,{children:\"No one\"})]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Allowed to merge : \",(0,e.jsx)(n.code,{children:\"Developers + Maintainers\"}),\".\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cliquez sur \",(0,e.jsx)(n.code,{children:\"Save changes\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Ainsi, les d\\xE9veloppeurs ne pourront pas pousser directement sur la branche principale, mais devront passer par des \",(0,e.jsx)(n.em,{children:\"merge requests\"}),\".\"]}),`\n`,(0,e.jsx)(n.h2,{children:\"\\u{1F36C} Meilleure gestion des MR au niveau d'un groupe\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Pour les \\xE9tudiants Vinci, vous n'avez pas de groupe \\xE0 configurer. Ce paragraphe est donc pour compr\\xE9hension uniquement du r\\xF4le d'un \",(0,e.jsx)(n.code,{children:\"Maintainer\"}),\" ou d'un \",(0,e.jsx)(n.code,{children:\"Owner\"}),\" au niveau d'un groupe Gitlab.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Vous pouvez configurer les \",(0,e.jsx)(n.em,{children:\"merge requests\"}),\" au niveau d'un groupe Gitlab pour appliquer des r\\xE8gles \\xE0 plusieurs projets. Voici comment configurer les \",(0,e.jsx)(n.em,{children:\"merge requests\"}),\" au niveau d'un groupe :\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Acc\\xE9dez aux param\\xE8tres du projet dans Gitlab (\",(0,e.jsx)(n.code,{children:\"Settings\"}),\").\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cliquez sur \",(0,e.jsx)(n.code,{children:\"General\"}),\" dans le menu de gauche.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cliquez sur \",(0,e.jsx)(n.code,{children:\"Merge requests\"}),\".\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cochez l'option \",(0,e.jsx)(n.code,{children:\"Pipelines must succeed Merge requests can't be merged if the latest pipeline did not succeed or is still running.\"}),\".\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cochez l'option \",(0,e.jsx)(n.code,{children:\"All threads must be resolved\"}),\".\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cliquez sur \",(0,e.jsx)(n.code,{children:\"Save changes\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Ainsi, les \",(0,e.jsx)(n.em,{children:\"merge requests\"}),\" ne pourront pas \\xEAtre fusionn\\xE9es si le pipeline d'int\\xE9gration continue a \\xE9chou\\xE9 ou si tous les threads n'ont pas \\xE9t\\xE9 r\\xE9solus.\"]}),`\n`,(0,e.jsx)(n.h2,{children:\"\\u{1F36C} Cr\\xE9ation d'un projet sous Gitlab\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Pour les \\xE9tudiants Vinci, vous ne devez pas cr\\xE9er de Projet Gitlab. Ce paragraphe est donc pour compr\\xE9hension uniquement du r\\xF4le d'un \",(0,e.jsx)(n.code,{children:\"Maintainer\"}),\" ou d'un \",(0,e.jsx)(n.code,{children:\"Owner\"}),\" qui doit cr\\xE9er un projet Gitlab.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Vous pouvez cr\\xE9er un nouveau projet \",(0,e.jsx)(n.code,{children:\"priv\\xE9\"}),\" sur Gitlab en suivant ces \\xE9tapes :\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Rendez-vous sur un groupe Gitlab (par exemple, \",(0,e.jsx)(n.a,{href:\"https://gitlab.com/e-vinci/cae-projects/2025-cae-projects\",children:\"https://gitlab.com/e-vinci/cae-projects/2025-cae-projects\"}),\").\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cliquez sur \",(0,e.jsx)(n.code,{children:\"New project\"}),\" en haut \\xE0 droite.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"S\\xE9lectionnez \",(0,e.jsx)(n.code,{children:\"Create blank project\"}),\".\"]}),`\n`,(0,e.jsx)(n.li,{children:\"Nommez votre projet.\"}),`\n`,(0,e.jsxs)(n.li,{children:[\"Assurez vous que le projet est \",(0,e.jsx)(n.code,{children:\"Private\"}),\".\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cliquez sur \",(0,e.jsx)(n.code,{children:\"Create project\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"\\u{1F36C} Configuration de votre projet sous Gitlab\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Pour les \\xE9tudiants Vinci, vous n'avez pas de projet \\xE0 configurer. Ce paragraphe est donc pour compr\\xE9hension uniquement du r\\xF4le d'un \",(0,e.jsx)(n.code,{children:\"Maintainer\"}),\" ou d'un \",(0,e.jsx)(n.code,{children:\"Owner\"}),\" au niveau d'un projet Gitlab.\"]}),`\n`,(0,e.jsx)(n.h3,{children:\"Protection de la branche principale\"}),`\n`,(0,e.jsx)(n.p,{children:\"Pour prot\\xE9ger la branche principale, vous ne devez normalement rien changer si vous avez cr\\xE9\\xE9 votre projet dans un groupe o\\xF9 vous avez d\\xE9j\\xE0 prot\\xE9g\\xE9 la branche principale.\"}),`\n`,(0,e.jsx)(n.p,{children:\"Pour v\\xE9rifier que tout est en ordre, vous pouvez suivre les \\xE9tapes suivantes :\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Acc\\xE9dez aux param\\xE8tres du projet dans Gitlab (\",(0,e.jsx)(n.code,{children:\"Settings\"}),\").\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cliquez sur \",(0,e.jsx)(n.code,{children:\"Repository\"}),\" dans le menu de gauche.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cliquez sur \",(0,e.jsx)(n.code,{children:\"Protected branches\"}),\".\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"La branche principale est \",(0,e.jsx)(n.code,{children:\"main\"}),\" par d\\xE9faut (il n'y a rien \\xE0 changer)\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Assurez que cela est s\\xE9lectionn\\xE9 : \",(0,e.jsx)(n.code,{children:\"Protect this branch\"}),\".\",`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"Allowed to merge\"}),\" : \",(0,e.jsx)(n.code,{children:\"Developers + Maintainers\"}),\".\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"Allowed to push and merge\"}),\" : \",(0,e.jsx)(n.code,{children:\"No one\"})]}),`\n`]}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Ainsi, les d\\xE9veloppeurs ne pourront pas pousser directement sur la branche principale, mais devront passer par des \",(0,e.jsx)(n.em,{children:\"merge requests\"}),\".\"]}),`\n`,(0,e.jsx)(n.h3,{children:\"Meilleure gestion des MR\"}),`\n`,(0,e.jsx)(n.h4,{children:\"Historique des commits plus propre\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Acc\\xE9dez aux param\\xE8tres du projet dans Gitlab (\",(0,e.jsx)(n.code,{children:\"Settings\"}),\").\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cliquez sur \",(0,e.jsx)(n.code,{children:\"Merge requests\"}),\" dans le menu de gauche.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cochez l'option \",(0,e.jsx)(n.code,{children:\"Fast-forward merge\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-txt\",children:(0,e.jsxs)(n.code,{className:\"language-txt code-highlight\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`Fast-forward merges only.\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`When there is a merge conflict, the user is given the option to rebase.\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`If merge trains are enabled, merging is only possible if the branch can be rebased without conflicts.\n`})]})}),`\n`,(0,e.jsxs)(n.ol,{start:\"4\",children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"Squash commits when merging\"}),\" : S\\xE9lectionnez \",(0,e.jsx)(n.code,{children:\"Do not allow\"}),\". \",(0,e.jsx)(n.code,{children:\"Squashing is never performed and the checkbox is hidden.\"})]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cliquez sur \",(0,e.jsx)(n.code,{children:\"Save changes\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h4,{children:\"Approbation des MR\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"Acc\\xE9dez aux param\\xE8tres du projet dans Gitlab (\",(0,e.jsx)(n.code,{children:\"Settings\"}),\").\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cliquez sur \",(0,e.jsx)(n.code,{children:\"Merge requests\"}),\" dans le menu de gauche.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Veuillez ajouter au moins un membre de votre \\xE9quipe pour approuver les \",(0,e.jsx)(n.em,{children:\"merge requests\"}),` :\n`,(0,e.jsx)(n.code,{children:\"Approval required\"}),\" : \",(0,e.jsx)(n.code,{children:\"1\"}),\" (ou plus si vous le souhaitez)\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cliquez sur \",(0,e.jsx)(n.code,{children:\"Save changes\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h1,{children:(0,e.jsx)(r,{children:\" Comment mettre en place le workflow d'int\\xE9gration continue ? \"})}),`\n`,(0,e.jsx)(n.h2,{children:\"Introduction\"}),`\n`,(0,e.jsx)(n.p,{children:\"Voici un premier workflow que nous souhaitons appliquer pour l'int\\xE9gration continue de code dans Gitlab :\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsx)(n.li,{children:\"Un d\\xE9veloppeur cr\\xE9e une nouvelle feature branche \\xE0 partir de la branche principale.\"}),`\n`,(0,e.jsx)(n.li,{children:\"Le d\\xE9veloppeur travaille sur sa feature et pousse ses modifications sur la branche distante.\"}),`\n`,(0,e.jsxs)(n.li,{children:[\"Le d\\xE9veloppeur cr\\xE9e une \",(0,e.jsx)(n.em,{children:\"merge request\"}),\" pour fusionner sa branche avec la branche principale.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Un autre membre de l'\\xE9quipe approuve la \",(0,e.jsx)(n.em,{children:\"merge request\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(n.p,{children:\"Nous allons commencer par ajouter le boilerplate de votre API Spring \\xE0 votre projet Gitlab.\"}),`\n`,(0,e.jsx)(n.h2,{children:\"Ajout du boilerplate de votre API Spring\"}),`\n`,(0,e.jsx)(n.p,{children:\"Veuillez cloner votre projet Gitlab sur votre machine locale.\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Vous devriez cr\\xE9er une nouvelle branche \\xE0 partir de la branche principale pour ajouter le boilerplate de votre API Spring. Nous vous proposons de l'appeler \",(0,e.jsx)(n.code,{children:\"api-init\"}),\".\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Pour l'ajout du boilerplate de votre API Spring, vous devez avoir fait tous les tutoriels qui sont demand\\xE9s dans la page \",(0,e.jsx)(n.a,{href:\"../quality/api\",children:\"Qualit\\xE9 de l'API\"}),`.\nLe boilerplate de votre API Spring doit \\xEAtre ajout\\xE9 \\xE0 la racine de votre projet Gitlab, dans un dossier nomm\\xE9 `,(0,e.jsx)(n.strong,{children:(0,e.jsx)(n.code,{children:\"api\"})}),`.\nSi vous avez suivi les tutoriels, vous devriez avoir un projet Spring Boot avec les d\\xE9pendances n\\xE9cessaires pour d\\xE9marrer votre API. En cas de souci, vous pouvez utiliser le dossier `,(0,e.jsx)(n.code,{children:\"api\"}),\" fourni dans ce repository : \",(0,e.jsx)(n.a,{href:\"https://github.com/e-vinci/cae-project-boilerplate\",children:\"cae-project-boilerplate\"}),\".\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Pensez \\xE0 ajouter un fichier \",(0,e.jsx)(n.code,{children:\".gitignore\"}),\" \\xE0 la racine de votre projet (votre repository) pour ignorer les fichiers inutiles.\"]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-txt\",children:(0,e.jsxs)(n.code,{className:\"language-txt code-highlight\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`### Mac\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`.DS_Store\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`### Windows\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`Thumbs.db\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`### Linux\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`lost+found\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`.env\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`*.env\n`})]})}),`\n`,(0,e.jsxs)(n.p,{children:[\"Apr\\xE8s avoir fait ces modifications, vous devez pousser votre branche \",(0,e.jsx)(n.code,{children:\"api-init\"}),\" sur votre repo distant (qui est votre projet Gitlab).\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Comment cr\\xE9er une Merge Request ? \",(0,e.jsx)(n.a,{href:\"https://docs.gitlab.com/ee/user/project/merge_requests/creating_merge_requests.html\",children:\"Voir la documentation\"})]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Sur votre projet Gitlab, vous devriez voir un bouton \",(0,e.jsx)(n.code,{children:\"Create merge request\"}),\" pour cr\\xE9er une \",(0,e.jsx)(n.em,{children:\"merge request\"}),\".\"]}),`\n`,(0,e.jsxs)(n.p,{children:[`TBC : V\\xE9rifier les consignes qui suivent.\nVeuillez compl\\xE9ter le formulaire de `,(0,e.jsx)(n.em,{children:\"merge request\"}),\" en indiquant les informations suivantes :\"]}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Title\"}),\" : \",(0,e.jsx)(n.code,{children:\"Ajout du boilerplate de l'API Spring\"})]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Description\"}),\" :\",`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"code-highlight\",children:(0,e.jsx)(n.span,{className:\"code-line\",children:`Ajout du boilerplate de l'API Spring.\n`})})}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Assign to\"}),\" : Assign to me\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Reviewers\"}),\" : S\\xE9lectionnez un membre de votre \\xE9quipe pour approuver la \",(0,e.jsx)(n.em,{children:\"merge request\"}),\".\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Merge options\"}),\" :\",`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"Delete source branch when merge request is accepted.\"}),\" : Cochez cette option pour supprimer la branche \",(0,e.jsx)(n.code,{children:\"boilerplate-init\"}),\" apr\\xE8s la fusion. On garde malgr\\xE9 tout l'historique complet des commits.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"Squash commits when merge request is accepted.\"}),\" : On pourrait cocher cette option pour fusionner tous les commits de la branche \",(0,e.jsx)(n.code,{children:\"boilerplate-init\"}),\" en un seul commit. N\\xE9anmoins, pour pouvoir suivre tous vos commits, nous vous demandons de ne pas cocher cette option.\"]}),`\n`]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Labels\"}),\" : Ajoutez le label \",(0,e.jsx)(n.code,{children:\"boilerplate\"}),\".\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Cliquez sur \",(0,e.jsx)(n.code,{children:\"Create merge request\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.p,{children:[`TBC : V\\xE9rifier les consignes qui suivent.\nVeuillez demander \\xE0 un autre membre de votre \\xE9quipe de revoir et d'approuver votre `,(0,e.jsx)(n.em,{children:\"merge request\"}),\".\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Comment approuver une Merge Request ? \",(0,e.jsx)(n.a,{href:\"https://docs.gitlab.com/ee/user/project/merge_requests/approvals/\",children:\"Voir la documentation\"})]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Une fois la \",(0,e.jsx)(n.em,{children:\"merge request\"}),\" approuv\\xE9e, vous ne pouvez toujours pas fusionner la branche \",(0,e.jsx)(n.code,{children:\"boilerplate-init\"}),\" avec la branche principale.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Vous avez le message suivant : \",(0,e.jsx)(n.code,{children:\"Merge blocked: 1 check failed. The pipeline for this merge request failed.\"}),`\nCela signifie que le pipeline d'int\\xE9gration continue a \\xE9chou\\xE9.`]}),`\n`,(0,e.jsx)(n.p,{children:\"Et c'est normal, car nous n'avons pas encore configur\\xE9 le pipeline d'int\\xE9gration continue pour ex\\xE9cuter les tests et v\\xE9rifier la qualit\\xE9 du code.\"}),`\n`,(0,e.jsx)(n.h1,{children:(0,e.jsx)(r,{children:\" Comment mettre en place un pipeline ? \"})}),`\n`,(0,e.jsx)(n.h2,{children:\"C'est quoi un pipeline ?\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Un pipeline est un ensemble de \",(0,e.jsx)(n.strong,{children:\"jobs\"}),\" qui sont ex\\xE9cut\\xE9s dans un ordre sp\\xE9cifique pour automatiser le processus de construction, de test et de d\\xE9ploiement d'une application.\"]}),`\n`,(0,e.jsx)(n.p,{children:\"Nous allons voir comment configurer un pipeline dans Gitlab pour ex\\xE9cuter les tests unitaires et v\\xE9rifier la qualit\\xE9 du code de notre API.\"}),`\n`,(0,e.jsx)(n.h2,{children:\"Configuration du pipeline\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Pour configurer un pipeline dans Gitlab, vous devez cr\\xE9er un fichier \",(0,e.jsx)(n.strong,{children:(0,e.jsx)(n.code,{children:\".gitlab-ci.yml\"})}),\" \\xE0 la racine de votre projet. Ce fichier contient les instructions pour ex\\xE9cuter les diff\\xE9rents jobs du pipeline.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Au niveau de la Merge requests, il y a un bouton \",(0,e.jsx)(n.code,{children:\"Try out GitLab Pipelines\"}),\" qui permet de tester le pipeline avant de la fusionner.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"A la racine de votre Projet Gitlab (votre repository), dans la branche \",(0,e.jsx)(n.code,{children:\"api-init\"}),\", cr\\xE9ez un fichier \",(0,e.jsx)(n.code,{children:\".gitlab-ci.yml\"}),\" avec le contenu suivant :\"]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-yaml\",children:(0,e.jsxs)(n.code,{className:\"language-yaml code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"api test\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"image\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),\" maven\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),\"3.9.9\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),\"amazoncorretto\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),(0,e.jsx)(n.span,{className:\"token number\",children:\"21\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"script\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),` cd api\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),` mvn clean test\n`]})]})}),`\n`,(0,e.jsxs)(n.p,{children:[\"Ce fichier d\\xE9finit un job nomm\\xE9 \",(0,e.jsx)(n.code,{children:\"api test\"}),\" qui utilise l'image Docker \",(0,e.jsx)(n.code,{children:\"maven:3.9.9-amazoncorretto-21\"}),\" pour ex\\xE9cuter les tests unitaires de l'API Spring. Le script ex\\xE9cute les commandes suivantes :\"]}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"cd api\"}),\" : se d\\xE9place dans le dossier \",(0,e.jsx)(n.code,{children:\"api\"}),\" o\\xF9 se trouve le code de l'API Spring.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"mvn clean test\"}),\" : ex\\xE9cute tous les checks que nous avons configur\\xE9s dans l'API Spring. Il s'agit du Checkstyle, du PMD, du CPD et des tests unitaires.\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Veuillez pousser votre fichier \",(0,e.jsx)(n.code,{children:\".gitlab-ci.yml\"}),\" sur votre d\\xE9p\\xF4t distant.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Maintenant que vous avez ajout\\xE9 le fichier \",(0,e.jsx)(n.code,{children:\".gitlab-ci.yml\"}),\", vous devriez voir un pipeline se d\\xE9clencher automatiquement \\xE0 chaque \",(0,e.jsx)(n.em,{children:\"push\"}),\" sur la branche \",(0,e.jsx)(n.code,{children:\"api-init\"}),\".\"]}),`\n`,(0,e.jsx)(n.h2,{children:\"V\\xE9rification du pipeline\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Pour v\\xE9rifier que le pipeline a \\xE9t\\xE9 ex\\xE9cut\\xE9e avec succ\\xE8s, vous pouvez acc\\xE9der \\xE0 l'onglet \",(0,e.jsx)(n.code,{children:\"Build\"}),\", \",(0,e.jsx)(n.code,{children:\"Pipelines\"}),\" de votre projet Gitlab.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"L\\xE0, vous devriez voir un pipeline avec le job \",(0,e.jsx)(n.code,{children:\"api test\"}),\" qui a \\xE9t\\xE9 ex\\xE9cut\\xE9 avec succ\\xE8s ou qui est toujours en cours.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Si vous cliquez sur le num\\xE9ro du pipeline, vous pouvez voir les d\\xE9tails de l'ex\\xE9cution du job \",(0,e.jsx)(n.code,{children:\"api test\"}),\". Puis vous pouvez voir les logs de l'ex\\xE9cution du job. On voit ici que tous les tests ont ex\\xE9cut\\xE9s avec succ\\xE8s et que le build est r\\xE9ussi.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Nous savons donc que la qualit\\xE9 du commit est bonne et que nous pouvons fusionner la branche \",(0,e.jsx)(n.code,{children:\"api-init\"}),\" avec la branche principale.\"]}),`\n`,(0,e.jsxs)(n.h2,{children:[\"Fusion de la branche \",(0,e.jsx)(n.code,{children:\"api-init\"}),\" avec la branche principale\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Maintenant que le pipeline a \\xE9t\\xE9 ex\\xE9cut\\xE9e avec succ\\xE8s, vous pouvez fusionner la branche \",(0,e.jsx)(n.code,{children:\"api-init\"}),\" avec la branche principale. Pour cela, vous devez approuver la \",(0,e.jsx)(n.em,{children:\"merge request\"}),\".\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Une fois la \",(0,e.jsx)(n.em,{children:\"merge request\"}),\" approuv\\xE9e, vous pouvez cliquer sur le bouton \",(0,e.jsx)(n.code,{children:\"Merge\"}),\" pour fusionner la branche \",(0,e.jsx)(n.code,{children:\"api-init\"}),\" avec la branche principale.\"]}),`\n`,(0,e.jsx)(n.p,{children:\"Attention, une fois la MR fusionn\\xE9e, un nouveau pipeline sera d\\xE9clench\\xE9 pour la branche principale. Vous devez vous assurer que ce pipeline est ex\\xE9cut\\xE9 avec succ\\xE8s avant de continuer.\"}),`\n`,(0,e.jsxs)(n.h2,{children:[\"Terminer la fusion de la branche \",(0,e.jsx)(n.code,{children:\"api-init\"}),\" avec la branche principale\"]}),`\n`,(0,e.jsxs)(n.p,{children:[`Tout est bien g\\xE9r\\xE9 sur le gitlab distant.\nIl reste \\xE0 terminer la fusion de la branche `,(0,e.jsx)(n.code,{children:\"api-init\"}),` avec la branche principale sur votre machine locale.\nPour ce faire, vous devez vous placer sur la branche principale et r\\xE9cup\\xE9rer les derni\\xE8res modifications. Par exemple, si vous \\xEAtes sur la branche `,(0,e.jsx)(n.code,{children:\"api-init\"}),\", vous pouvez ex\\xE9cuter les commandes suivantes :\"]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-bash\",children:(0,e.jsxs)(n.code,{className:\"language-bash code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token function\",children:\"git\"}),` checkout main\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token function\",children:\"git\"}),` pull\n`]})]})}),`\n`,(0,e.jsx)(n.h2,{children:\"R\\xE9sum\\xE9 du workflow actuel pour l'int\\xE9gration continue\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsx)(n.li,{children:\"Un d\\xE9veloppeur cr\\xE9e une nouvelle feature branche \\xE0 partir de la branche principale.\"}),`\n`,(0,e.jsx)(n.li,{children:\"Le d\\xE9veloppeur travaille sur sa feature et pousse ses modifications sur la branche distante.\"}),`\n`,(0,e.jsx)(n.li,{children:\"Le pipeline d'int\\xE9gration continue est d\\xE9clench\\xE9 automatiquement. Si le pipeline \\xE9choue, le d\\xE9veloppeur doit corriger les erreurs avant de continuer.\"}),`\n`,(0,e.jsxs)(n.li,{children:[\"Le d\\xE9veloppeur cr\\xE9e une \",(0,e.jsx)(n.em,{children:\"merge request\"}),\" pour fusionner sa branche avec la branche principale.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"Un autre membre de l'\\xE9quipe approuve la \",(0,e.jsx)(n.em,{children:\"merge request\"}),\".\"]}),`\n`,(0,e.jsxs)(n.li,{children:[\"La \",(0,e.jsx)(n.em,{children:\"merge request\"}),\" est fusionn\\xE9e avec la branche principale.\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h1,{children:(0,e.jsx)(r,{children:\" Comment g\\xE9rer des t\\xE2ches en parall\\xE8le dans un pipeline ? \"})}),`\n`,(0,e.jsx)(n.h2,{children:\"Introduction\"}),`\n`,(0,e.jsx)(n.p,{children:\"Comment g\\xE9rer des t\\xE2ches en parall\\xE8le dans un pipeline ? Par exemple, comment ex\\xE9cuter les tests du frontend et de l'API en parall\\xE8le dans un pipeline ?\"}),`\n`,(0,e.jsx)(n.p,{children:\"En fait, dans Gitlab, vous pouvez d\\xE9finir plusieurs jobs dans un pipeline et les ex\\xE9cuter en parall\\xE8le.\"}),`\n`,(0,e.jsx)(n.p,{children:\"Si vous avez plusieurs jobs qui ne d\\xE9pendent pas les uns des autres, vous pouvez les ex\\xE9cuter en parall\\xE8le pour gagner du temps.\"}),`\n`,(0,e.jsx)(n.p,{children:\"Nous allons donc ajouter notre frontend React dans le pipeline et ex\\xE9cuter les tests du frontend et de l'API en parall\\xE8le.\"}),`\n`,(0,e.jsx)(n.h2,{children:\"Ajout du boilerplate de votre frontend\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Pour l'ajout du boilerplate de votre frontend, vous devez avoir fait tout ce qui est demand\\xE9 dans la page \",(0,e.jsx)(n.a,{href:\"../quality/frontend\",children:\"Qualit\\xE9 du Frontend\"}),`.\nA la fin de ces tutoriels (le dernier s'appelle `,(0,e.jsx)(n.code,{children:\"unit-tests\"}),\"), vous devriez avoir un projet React avec les d\\xE9pendances n\\xE9cessaires pour d\\xE9marrer un frontend. N\\xE9anmoins, ce frontend n'int\\xE8gre pas la librairie MUI.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Pour vous aider, nous avons cr\\xE9\\xE9 un boilerplate pour le frontend qui reprend les tutoriels pr\\xE9c\\xE9dents et qui int\\xE8gre la librairie MUI. Vous pouvez le trouver ici : \",(0,e.jsx)(n.a,{href:\"https://github.com/e-vinci/cae-project-boilerplate\",children:\"cae-project-boilerplate\"}),\".\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Vous devriez cr\\xE9er une nouvelle branche \\xE0 partir de la branche principale pour ajouter le boilerplate de votre frontend React dans un dossier nomm\\xE9 \",(0,e.jsx)(n.strong,{children:(0,e.jsx)(n.code,{children:\"/frontend\"})}),\". Nous vous proposons d'appeler votre nouvelle branche \",(0,e.jsx)(n.code,{children:\"frontend-init\"}),\".\"]}),`\n`,(0,e.jsx)(n.h2,{children:\"Mise \\xE0 jour du pipeline\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Veuillez mettre \\xE0 jour votre fichier \",(0,e.jsx)(n.code,{children:\".gitlab-ci.yml\"}),\" pour ex\\xE9cuter les tests du frontend et de l'API en parall\\xE8le :\"]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-yaml\",children:(0,e.jsxs)(n.code,{className:\"language-yaml code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"api test\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"image\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),\" maven\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),\"3.9.9\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),\"amazoncorretto\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),(0,e.jsx)(n.span,{className:\"token number\",children:\"21\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"script\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),` cd api\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),` mvn clean test\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line highlight-line\",children:[(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"frontend test\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line highlight-line\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"image\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),\" node\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),(0,e.jsx)(n.span,{className:\"token number\",children:\"20\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line highlight-line\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"script\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line highlight-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),` cd frontend\n`]}),(0,e.jsxs)(n.span,{className:\"code-line highlight-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),` npm install\n`]}),(0,e.jsxs)(n.span,{className:\"code-line highlight-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),` npm run lint\n`]}),(0,e.jsxs)(n.span,{className:\"code-line highlight-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),` npm run coverage\n`]})]})}),`\n`,(0,e.jsxs)(n.p,{children:[\"Ce fichier d\\xE9finit deux jobs \",(0,e.jsx)(n.code,{children:\"api test\"}),\" et \",(0,e.jsx)(n.code,{children:\"frontend test\"}),\" qui ex\\xE9cutent les tests de l'API Spring et du frontend React en parall\\xE8le.\"]}),`\n`,(0,e.jsx)(n.p,{children:\"Ici, pour le frontend, nous souhaitons d'abord ex\\xE9cuter les tests du linter, puis les tests unitaires pour g\\xE9n\\xE9rer un rapport de couverture de code.\"}),`\n`,(0,e.jsx)(n.p,{children:\"Veuillez pousser tous vos modifications sur votre repo distant.\"}),`\n`,(0,e.jsx)(n.h2,{children:\"V\\xE9rification du pipeline\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Apr\\xE8s avoir pouss\\xE9 vos modifications, vous devriez voir un nouveau pipeline se d\\xE9clencher automatiquement \\xE0 chaque \",(0,e.jsx)(n.em,{children:\"push\"}),\" sur la branche \",(0,e.jsx)(n.code,{children:\"frontend-init\"}),\".\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Vous devriez voir deux jobs \",(0,e.jsx)(n.code,{children:\"api test\"}),\" et \",(0,e.jsx)(n.code,{children:\"frontend test\"}),` qui sont ex\\xE9cut\\xE9s en\nparall\\xE8le.`]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Une fois le pipeline ex\\xE9cut\\xE9 avec succ\\xE8s, nous pourrions fusionner la branche \",(0,e.jsx)(n.code,{children:\"frontend-init\"}),\" avec la branche principale.\"]}),`\n`,(0,e.jsx)(n.p,{children:\"Mais avant cela, nous souhaitons d\\xE9couvrir un nouveau concept, la notion d'artefacts pour stocker les rapports de tests g\\xE9n\\xE9r\\xE9s par les jobs du pipeline.\"}),`\n`,(0,e.jsx)(n.h1,{children:(0,e.jsx)(r,{children:\" Comment sauvegarder des rapports dans Gitlab ? \"})}),`\n`,(0,e.jsx)(n.h2,{children:\"Introduction\"}),`\n`,(0,e.jsx)(n.p,{children:\"Dans un pipeline, il est souvent n\\xE9cessaire de g\\xE9n\\xE9rer des rapports de tests, de couverture de code, de qualit\\xE9 du code, etc. Ces rapports peuvent \\xEAtre stock\\xE9s dans Gitlab en tant qu'artefacts pour les consulter ult\\xE9rieurement.\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Nous allons voir comment sauvegarder les rapports de tests g\\xE9n\\xE9r\\xE9s par les jobs \",(0,e.jsx)(n.code,{children:\"api test\"}),\" et \",(0,e.jsx)(n.code,{children:\"frontend test\"}),\" dans Gitlab.\"]}),`\n`,(0,e.jsx)(n.h2,{children:\"Sauvegarde des rapports\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Pour sauvegarder les rapports de tests dans Gitlab, vous devez utiliser l'option \",(0,e.jsx)(n.code,{children:\"artifacts\"}),\" dans le fichier \",(0,e.jsx)(n.code,{children:\".gitlab-ci.yml\"}),\".\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Voici comment mettre \\xE0 jour votre fichier \",(0,e.jsx)(n.code,{children:\".gitlab-ci.yml\"}),\" pour sauvegarder les rapports de tests :\"]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-yaml\",children:(0,e.jsxs)(n.code,{className:\"language-yaml code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line line-number\",line:\"1\",children:[(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"api test\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line line-number\",line:\"2\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"image\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),\" maven\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),\"3.9.9\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),\"amazoncorretto\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),(0,e.jsx)(n.span,{className:\"token number\",children:\"21\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line line-number\",line:\"3\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"script\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line line-number\",line:\"4\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),` cd api\n`]}),(0,e.jsxs)(n.span,{className:\"code-line line-number\",line:\"5\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),` mvn clean test\n`]}),(0,e.jsxs)(n.span,{className:\"code-line line-number highlight-line\",line:\"6\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"artifacts\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line line-number highlight-line\",line:\"7\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"paths\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line line-number highlight-line\",line:\"8\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),` api/target/reports/\n`]}),(0,e.jsxs)(n.span,{className:\"code-line line-number highlight-line\",line:\"9\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),` api/target/site/\n`]}),(0,e.jsxs)(n.span,{className:\"code-line line-number highlight-line\",line:\"10\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),\" api/target/surefire\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),`reports/\n`]}),(0,e.jsx)(n.span,{className:\"code-line line-number\",line:\"11\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line line-number\",line:\"12\",children:[(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"frontend test\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line line-number\",line:\"13\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"image\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),\" node\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),(0,e.jsx)(n.span,{className:\"token number\",children:\"20\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line line-number\",line:\"14\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"script\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line line-number\",line:\"15\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),` cd frontend\n`]}),(0,e.jsxs)(n.span,{className:\"code-line line-number\",line:\"16\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),` npm install\n`]}),(0,e.jsxs)(n.span,{className:\"code-line line-number\",line:\"17\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),` npm run lint\n`]}),(0,e.jsxs)(n.span,{className:\"code-line line-number\",line:\"18\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),` npm run coverage\n`]}),(0,e.jsxs)(n.span,{className:\"code-line line-number highlight-line\",line:\"19\",children:[\"  \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"artifacts\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line line-number highlight-line\",line:\"20\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token key atrule\",children:\"paths\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line line-number highlight-line\",line:\"21\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"-\"}),` frontend/coverage/\n`]})]})}),`\n`,(0,e.jsxs)(n.p,{children:[\"Ce fichier d\\xE9finit deux jobs \",(0,e.jsx)(n.code,{children:\"api test\"}),\" et \",(0,e.jsx)(n.code,{children:\"frontend test\"}),\" qui ex\\xE9cutent les tests de l'API Spring et du frontend React en parall\\xE8le. Les rapports de tests g\\xE9n\\xE9r\\xE9s par ces jobs sont sauvegard\\xE9s dans Gitlab en tant qu'artefacts.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Pour l'API Spring, nous sauvegardons les rapports dans les dossiers \",(0,e.jsx)(n.code,{children:\"api/target/reports/\"}),\", \",(0,e.jsx)(n.code,{children:\"api/target/site/\"}),\" et \",(0,e.jsx)(n.code,{children:\"api/target/surefire-reports/\"}),\". Pour le frontend React, nous sauvegardons les rapports dans le dossier \",(0,e.jsx)(n.code,{children:\"frontend/coverage/\"}),\".\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Pour retrouver ces documents dans Gitlab, vous pouvez acc\\xE9der \\xE0 l'onglet \",(0,e.jsx)(n.code,{children:\"Build\"}),\", \",(0,e.jsx)(n.code,{children:\"Pipelines\"}),\" de votre projet Gitlab. Vous devriez voir un pipeline avec les jobs \",(0,e.jsx)(n.code,{children:\"api test\"}),\" et \",(0,e.jsx)(n.code,{children:\"frontend test\"}),\" qui ont \\xE9t\\xE9 ex\\xE9cut\\xE9s avec succ\\xE8s.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Si vous cliquez sur le num\\xE9ro du pipeline, vous pouvez voir les d\\xE9tails de l'ex\\xE9cution du job \",(0,e.jsx)(n.code,{children:\"api test\"}),\" ou \",(0,e.jsx)(n.code,{children:\"frontend test\"}),`.\nEn cliquant sur le job, vous pouvez t\\xE9l\\xE9charger ou voir les artefacts g\\xE9n\\xE9r\\xE9s par le job.`]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Pour voir les artefacts g\\xE9n\\xE9r\\xE9s par le job \",(0,e.jsx)(n.code,{children:\"api test\"}),\", vous pouvez cliquer sur le job \",(0,e.jsx)(n.code,{children:\"api test\"}),\" dans le pipeline. Cliquez ensuite sur le bouton \",(0,e.jsx)(n.code,{children:\"Browse\"}),\" pour voir les artefacts g\\xE9n\\xE9r\\xE9s par le job.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Idem pour le job \",(0,e.jsx)(n.code,{children:\"frontend test\"}),\". Allez dans le pipeline, cliquez sur le job \",(0,e.jsx)(n.code,{children:\"frontend test\"}),\" et cliquez sur le bouton \",(0,e.jsx)(n.code,{children:\"Browse\"}),\" pour voir les artefacts g\\xE9n\\xE9r\\xE9s par le job.\"]}),`\n`,(0,e.jsx)(n.h2,{children:\"Int\\xE9gration des changements dans la branche principale\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Maintenant que vous avez ajout\\xE9 les artefacts dans votre pipeline, vous pouvez fusionner la branche \",(0,e.jsx)(n.code,{children:\"frontend-init\"}),\" avec la branche principale.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Pour cela, vous devez cr\\xE9er une \",(0,e.jsx)(n.em,{children:\"merge request\"}),\" pour fusionner la branche \",(0,e.jsx)(n.code,{children:\"frontend-init\"}),\" avec la branche principale. Une fois la \",(0,e.jsx)(n.em,{children:\"merge request\"}),\" approuv\\xE9e, vous pouvez cliquer sur le bouton \",(0,e.jsx)(n.code,{children:\"Merge\"}),\" pour fusionner la branche \",(0,e.jsx)(n.code,{children:\"frontend-init\"}),\" avec la branche principale.\"]}),`\n`,(0,e.jsx)(n.p,{children:\"N'oubliez pas de mettre \\xE0 jour votre branche principale sur votre machine locale apr\\xE8s la fusion.\"}),`\n`,(0,e.jsx)(n.h1,{children:(0,e.jsx)(r,{children:\" Est-ce que cette int\\xE9gration continue est vraiment utile ? \"})}),`\n`,(0,e.jsx)(n.h2,{children:\"Intro\"}),`\n`,(0,e.jsx)(n.p,{children:\"Imaginons que quelqu'un vient \\xE0 changer le code du frontend ou de l'API. Il est possible que ces changements affectent le bon fonctionnement de l'application.\"}),`\n`,(0,e.jsx)(n.p,{children:\"L'int\\xE9gration continue permet de d\\xE9tecter ces probl\\xE8mes le plus t\\xF4t possible, en ex\\xE9cutant automatiquement les tests et en v\\xE9rifiant la qualit\\xE9 du code \\xE0 chaque modification du code.\"}),`\n`,(0,e.jsx)(n.p,{children:\"Pour ce tutoriel, veuillez cr\\xE9er un souci au niveau du frontend.\"}),`\n`,(0,e.jsx)(n.h2,{children:\"Cr\\xE9ation d'un souci au niveau du frontend\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Vous savez qu'il est impossible de faire un \",(0,e.jsx)(n.code,{children:\"push\"}),\" directement sur la branche principale. Vous devez passer par une \",(0,e.jsx)(n.em,{children:\"merge request\"}),\".\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Veuillez donc cr\\xE9er une nouvelle branche au niveau du frontend que nous allons appeler \",(0,e.jsx)(n.code,{children:\"update-login-color\"}),\".\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Veuillez mettre \\xE0 jour le fichier \",(0,e.jsx)(n.code,{children:\"src/components/pages/LoginPage.tsx\"}),` pour changer la couleur du formulaire de connexion (de 'secondary.light' vers \"primary.light\").`]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-tsx\",children:(0,e.jsxs)(n.code,{className:\"language-tsx code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"return\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"<\"}),(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Box\"})]}),`\n`]})]}),(0,e.jsx)(n.span,{className:\"code-line\",children:(0,e.jsxs)(n.span,{className:\"token tag\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token attr-name\",children:\"sx\"}),(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[(0,e.jsx)(n.span,{className:\"token script-punctuation punctuation\",children:\"=\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]})]})}),(0,e.jsx)(n.span,{className:\"code-line\",children:(0,e.jsx)(n.span,{className:\"token tag\",children:(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[\"        margin\",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"2\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]})})}),(0,e.jsx)(n.span,{className:\"code-line\",children:(0,e.jsx)(n.span,{className:\"token tag\",children:(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[\"        padding\",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"3\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]})})}),(0,e.jsx)(n.span,{className:\"code-line highlight-line\",children:(0,e.jsx)(n.span,{className:\"token tag\",children:(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[\"        backgroundColor\",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"primary.light\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]})})}),(0,e.jsx)(n.span,{className:\"code-line\",children:(0,e.jsx)(n.span,{className:\"token tag\",children:(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[\"        borderRadius\",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"4\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]})})}),(0,e.jsx)(n.span,{className:\"code-line\",children:(0,e.jsx)(n.span,{className:\"token tag\",children:(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[\"        boxShadow\",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"2\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]})})}),(0,e.jsx)(n.span,{className:\"code-line\",children:(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"})]}),`\n`]})}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),(0,e.jsx)(n.span,{className:\"token plain-text\",children:`\n`})]})]})}),`\n`,(0,e.jsxs)(n.p,{children:[\"Faite un \",(0,e.jsx)(n.code,{children:\"commit\"}),\" et un \",(0,e.jsx)(n.code,{children:\"push\"}),\" sur votre branche \",(0,e.jsx)(n.code,{children:\"update-login-color\"}),\".\"]}),`\n`,(0,e.jsx)(n.h2,{children:\"V\\xE9rification du pipeline\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Apr\\xE8s avoir pouss\\xE9 vos modifications, vous devriez voir un nouveau pipeline se d\\xE9clencher automatiquement \\xE0 chaque \",(0,e.jsx)(n.em,{children:\"push\"}),\" sur la branche \",(0,e.jsx)(n.code,{children:\"update-login-color\"}),\".\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Vous devriez voir deux jobs \",(0,e.jsx)(n.code,{children:\"api test\"}),\" et \",(0,e.jsx)(n.code,{children:\"frontend test\"}),\" qui sont ex\\xE9cut\\xE9s en parall\\xE8le.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Et finalement, vous devriez voir que le job \",(0,e.jsx)(n.code,{children:\"frontend test\"}),\" a \\xE9chou\\xE9. En cliquant sur le job \",(0,e.jsx)(n.code,{children:\"frontend test\"}),`, vous pouvez voir les d\\xE9tails de l'\\xE9chec.\nVoici le message d'erreur que vous devriez voir :`]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-txt\",children:(0,e.jsxs)(n.code,{className:\"language-txt code-highlight\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`/builds/e-vinci/cae-projects/2025-cae-projects/cae-xy/frontend/src/components/pages/LoginPage.tsx\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:\"  40:26  error  Replace `\\\"primary.light\\\"` with `'primary.light'`  prettier/prettier\\n\"}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\\u2716 1 problem (1 error, 0 warnings)\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:\"  1 error and 0 warnings potentially fixable with the `--fix` option.\\n\"})]})}),`\n`,(0,e.jsxs)(n.p,{children:[\"On voit ici que le linter ESLint a d\\xE9tect\\xE9 une erreur dans le fichier \",(0,e.jsx)(n.code,{children:\"src/components/pages/LoginPage.tsx\"}),\". Nous avons utilis\\xE9 des guillemets doubles au lieu de simples pour la couleur du formulaire de connexion !!!\"]}),`\n`,(0,e.jsx)(n.h2,{children:\"Correction de l'erreur\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Pour corriger cette erreur, vous devez mettre \\xE0 jour le fichier \",(0,e.jsx)(n.code,{children:\"src/components/pages/LoginPage.tsx\"}),\" pour changer la couleur du formulaire de connexion de \",(0,e.jsx)(n.code,{children:'\"primary.light\"'}),\" vers \",(0,e.jsx)(n.code,{children:\"'primary.light'\"}),\".\"]}),`\n`,(0,e.jsx)(n.pre,{className:\"language-tsx\",children:(0,e.jsxs)(n.code,{className:\"language-tsx code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"return\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"<\"}),(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Box\"})]}),`\n`]})]}),(0,e.jsx)(n.span,{className:\"code-line\",children:(0,e.jsxs)(n.span,{className:\"token tag\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token attr-name\",children:\"sx\"}),(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[(0,e.jsx)(n.span,{className:\"token script-punctuation punctuation\",children:\"=\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]})]})}),(0,e.jsx)(n.span,{className:\"code-line\",children:(0,e.jsx)(n.span,{className:\"token tag\",children:(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[\"        margin\",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"2\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]})})}),(0,e.jsx)(n.span,{className:\"code-line\",children:(0,e.jsx)(n.span,{className:\"token tag\",children:(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[\"        padding\",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"3\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]})})}),(0,e.jsx)(n.span,{className:\"code-line highlight-line\",children:(0,e.jsx)(n.span,{className:\"token tag\",children:(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[\"        backgroundColor\",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:\"'primary.light'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]})})}),(0,e.jsx)(n.span,{className:\"code-line\",children:(0,e.jsx)(n.span,{className:\"token tag\",children:(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[\"        borderRadius\",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"4\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]})})}),(0,e.jsx)(n.span,{className:\"code-line\",children:(0,e.jsx)(n.span,{className:\"token tag\",children:(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[\"        boxShadow\",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"2\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]})})}),(0,e.jsx)(n.span,{className:\"code-line\",children:(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token script language-javascript\",children:[\"      \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"})]}),`\n`]})}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),(0,e.jsx)(n.span,{className:\"token plain-text\",children:`\n`})]})]})}),`\n`,(0,e.jsxs)(n.p,{children:[\"Faite un \",(0,e.jsx)(n.code,{children:\"commit\"}),\" et un \",(0,e.jsx)(n.code,{children:\"push\"}),\" sur votre branche \",(0,e.jsx)(n.code,{children:\"update-login-color\"}),\".\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Cette fois-ci, le job \",(0,e.jsx)(n.code,{children:\"frontend test\"}),\" devrait \\xEAtre ex\\xE9cut\\xE9 avec succ\\xE8s ! \\u{1F389}\"]})]})}function m(i={}){let{wrapper:n}=i.components||{};return n?(0,e.jsx)(n,{...i,children:(0,e.jsx)(h,{...i})}):h(i)}function c(i,n){throw new Error(\"Expected \"+(n?\"component\":\"object\")+\" `\"+i+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return j(P);})();\n;return Component;"},"__N_SSG":true}